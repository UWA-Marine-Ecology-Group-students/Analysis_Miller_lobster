library(gridExtra)
library(ggplot2)
library(grid)
detach("package:plyr", unload=TRUE)#will error - don't worry
library(tidyr)
library(dplyr)
options(dplyr.width = Inf) #enables head() to display all coloums
library(mgcv)
rm(list=ls())
# Plotting Theme-
Theme1 <-
theme( # use theme_get() to see available options
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# legend.background = element_rect(fill="white"),
legend.background = element_blank(),
legend.key = element_blank(), # switch off the rectangle around symbols in the legend
legend.text = element_text(size=15),
legend.title = element_blank(),
legend.position = c(0.2, 0.8),
text=element_text(size=15),
strip.text.y = element_text(size = 15,angle = 0),
axis.title.x=element_text(vjust=0.3, size=15),
axis.title.y=element_text(vjust=0.6, angle=90, size=15),
axis.text.x=element_text(size=15),
axis.text.y=element_text(size=15),
axis.line.x=element_line(colour="black", size=0.5,linetype='solid'),
axis.line.y=element_line(colour="black", size=0.5,linetype='solid'),
strip.background = element_blank())
# work.dir=("~/workspace/Analysis_Miller_WRL") #for ecocloud server
work.dir=("Z://Analysis_Miller_lobster") #for laptop
## Sub directories ----
data.dir<-paste(work.dir,"Data",sep="/")
map.dir<-paste(work.dir,"Map Layers",sep="/")
plots.dir<-paste(work.dir,"Plots",sep="/")
model.dir<-paste(work.dir,"Model_out_catch",sep="/")
# Bring in and format the data----
name<-"catch"
setwd(data.dir)
dir()
dat<- read_csv("length.sw.sst.csv")%>%
dplyr::rename(response=Carapace.length,
Taxa=Colour)%>%
drop_na(Taxa)%>%
drop_na(response)%>%
filter(Taxa%in%c("Red","White"))%>%
filter(!Location=="Rivermouth")%>%
filter(!Location=="Golden Ridge")%>% #think about putting that back in
# #   Transform variables
mutate(Date=as.factor(yday(Date)))%>%
mutate(Site=as.factor(Site))%>%
mutate(Location=as.factor(Location))%>%
mutate(Trap.ID=as.factor(Trap.ID))%>%
glimpse()
library(lubridate)
library(readr)
# Plotting Theme-
Theme1 <-
theme( # use theme_get() to see available options
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# legend.background = element_rect(fill="white"),
legend.background = element_blank(),
legend.key = element_blank(), # switch off the rectangle around symbols in the legend
legend.text = element_text(size=15),
legend.title = element_blank(),
legend.position = c(0.2, 0.8),
text=element_text(size=15),
strip.text.y = element_text(size = 15,angle = 0),
axis.title.x=element_text(vjust=0.3, size=15),
axis.title.y=element_text(vjust=0.6, angle=90, size=15),
axis.text.x=element_text(size=15),
axis.text.y=element_text(size=15),
axis.line.x=element_line(colour="black", size=0.5,linetype='solid'),
axis.line.y=element_line(colour="black", size=0.5,linetype='solid'),
strip.background = element_blank())
# work.dir=("~/workspace/Analysis_Miller_WRL") #for ecocloud server
work.dir=("Z://Analysis_Miller_lobster") #for laptop
## Sub directories ----
data.dir<-paste(work.dir,"Data",sep="/")
map.dir<-paste(work.dir,"Map Layers",sep="/")
plots.dir<-paste(work.dir,"Plots",sep="/")
model.dir<-paste(work.dir,"Model_out_catch",sep="/")
# Bring in and format the data----
name<-"catch"
dat<- read_csv("length.sw.sst.csv")%>%
dplyr::rename(response=Carapace.length,
Taxa=Colour)%>%
drop_na(Taxa)%>%
drop_na(response)%>%
filter(Taxa%in%c("Red","White"))%>%
filter(!Location=="Rivermouth")%>%
#filter(!Location=="Golden Ridge")%>% #think about putting that back in
# #   Transform variables
mutate(Date=as.factor(yday(Date)))%>%
mutate(Site=as.factor(Site))%>%
mutate(Location=as.factor(Location))%>%
mutate(Trap.ID=as.factor(Trap.ID))%>%
glimpse()
setwd(data.dir)
setwd("C:/GitHub/Analysis_Miller_lobster/Data")
setwd("C:/GitHub/Analysis_Miller_lobster/Data")dir()
setwd("C:/GitHub/Analysis_Miller_lobster/Data")
dat<- read_csv("length.sw.sst.csv")%>%
dplyr::rename(response=Carapace.length,
Taxa=Colour)%>%
drop_na(Taxa)%>%
drop_na(response)%>%
filter(Taxa%in%c("Red","White"))%>%
filter(!Location=="Rivermouth")%>%
#filter(!Location=="Golden Ridge")%>% #think about putting that back in
# #   Transform variables
mutate(Date=as.factor(yday(Date)))%>%
mutate(Site=as.factor(Site))%>%
mutate(Location=as.factor(Location))%>%
mutate(Trap.ID=as.factor(Trap.ID))%>%
glimpse()
mod=gam(response~s(T1.s.sw,k=3,bs='cr') +s(sst,k=3,bs='cr')+s(Site,bs='re')+ s(Trap.ID,bs='re')+ Location+s(Date,bs='re'),family=tw(),data=use.dat)
# Model for White----
# Hs.m.sw+Location+T1.s.sw
use.dat<-dat%>%
filter(Taxa=="White")%>%
glimpse()
mod=gam(response~s(T1.s.sw,k=3,bs='cr') +s(sst,k=3,bs='cr')+s(Site,bs='re')+ s(Trap.ID,bs='re')+ Location+s(Date,bs='re'),family=tw(),data=use.dat)
mod=gam(response~s(T1.s.sw,k=3,bs='cr') +s(sst,k=3,bs='cr')+s(Site,bs='re')+ s(Trap.ID,bs='re')+ Location,family=tw(),data=use.dat)
summary(mod)
# Legal_predict - Location------
testdata <- expand.grid(Hs.m.sw=mean(mod$model$Hs.m.sw),
T1.s.sw=mean(mod$model$T1.s.sw),
sst=mean(mod$model$sst),
#Date=(mod$model$Date),
Site=(mod$model$Site),
Location = c("Cliff Head","Golden Ridge","Irwin Reef","Seven Mile"))%>%
distinct()%>%
glimpse()
# Legal_predict - Location------
testdata <- expand.grid(#Hs.m.sw=mean(mod$model$Hs.m.sw),
T1.s.sw=mean(mod$model$T1.s.sw),
sst=mean(mod$model$sst),
#Date=(mod$model$Date),
Site=(mod$model$Site),
Location = c("Cliff Head","Golden Ridge","Irwin Reef","Seven Mile"))%>%
distinct()%>%
glimpse()
fits <- predict.gam(mod, newdata=testdata, type='response', se.fit=T)
# Legal_predict - Location------
testdata <- expand.grid(#Hs.m.sw=mean(mod$model$Hs.m.sw),
T1.s.sw=mean(mod$model$T1.s.sw),
sst=mean(mod$model$sst),
#Date=(mod$model$Date),
Site=(mod$model$Site),
Trap.ID=(mod$model$Trap.ID)
Location = c("Cliff Head","Golden Ridge","Irwin Reef","Seven Mile"))%>%
distinct()%>%
glimpse()
# Legal_predict - Location------
testdata <- expand.grid(#Hs.m.sw=mean(mod$model$Hs.m.sw),
T1.s.sw=mean(mod$model$T1.s.sw),
sst=mean(mod$model$sst),
Date=(mod$model$Date),
Site=(mod$model$Site),
Trap.ID=(mod$model$Trap.ID)
Location = c("Cliff Head","Golden Ridge","Irwin Reef","Seven Mile"))%>%
distinct()%>%
glimpse()
summary(mod)
# Legal_predict - Location------
testdata <- expand.grid(
T1.s.sw=mean(mod$model$T1.s.sw),
sst=mean(mod$model$sst),
Site=(mod$model$Site),
Trap.ID=(mod$model$Trap.ID)
Location = c("Cliff Head","Golden Ridge","Irwin Reef","Seven Mile"))%>%
distinct()%>%
glimpse()
fits <- predict.gam(mod, newdata=testdata, type='response', se.fit=T)
# Legal_predict - Location------
testdata <- expand.grid(
T1.s.sw=mean(mod$model$T1.s.sw),
sst=mean(mod$model$sst),
Site=(mod$model$Site),
Trap.ID=(mod$model$Trap.ID)
Location = c("Cliff Head","Golden Ridge","Irwin Reef","Seven Mile"))%>%
distinct()%>%
glimpse()
# Legal_predict - Location------
testdata <- expand.grid(T1.s.sw=mean(mod$model$T1.s.sw),
sst=mean(mod$model$sst),
Site=(mod$model$Site),
Trap.ID=(mod$model$Trap.ID)
Location = c("Cliff Head","Golden Ridge","Irwin Reef","Seven Mile"))%>%
distinct()%>%
glimpse()
# Legal_predict - Location------
testdata <- expand.grid(T1.s.sw=mean(mod$model$T1.s.sw),
sst=mean(mod$model$sst),
Site=(mod$model$Site),
Trap.ID=(mod$model$Trap.ID)
Location = c("Cliff Head","Golden Ridge","Irwin Reef","Seven Mile"))%>%
distinct()%>%
glimpse()
# Legal_predict - Location------
testdata <- expand.grid(T1.s.sw=mean(mod$model$T1.s.sw),
sst=mean(mod$model$sst),
Site=(mod$model$Site),
Trap.ID=(mod$model$Trap.ID),
Location = c("Cliff Head","Golden Ridge","Irwin Reef","Seven Mile"))%>%
distinct()%>%
glimpse()
fits <- predict.gam(mod, newdata=testdata, type='response', se.fit=T)
#head(fits,2)
predicts.catch.red = testdata%>%data.frame(fits)%>%
group_by(Location)%>% #only change here
summarise(response=mean(fit),se.fit=mean(se.fit))%>%
ungroup()%>%
glimpse()
# Plot legal catch - location ----
length.white.location<- ggplot(aes(x=Location,y=response,fill=Location,colour=Location), data=predicts.catch.red) +
ylab("Length (mm)")+
xlab('Location')+
# scale_fill_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_colour_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_x_discrete(limits = rev(levels(predicts.bds.status$Status)))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = response-se.fit,ymax = response+se.fit),width = 0.5) +
theme_classic()+
Theme1
# annotate("text", x = -Inf, y=Inf, label = "(a)",vjust = 1, hjust = -.1,size=5)+
# annotate("text", x = -Inf, y=Inf, label = "   Dosinia subrosea",vjust = 1, hjust = -.1,size=5,fontface="italic")
length.white.location
# Legal_predict - Location------
testdata <- expand.grid(T1.s.sw=mean(mod$model$T1.s.sw),
sst=mean(mod$model$sst),
Site=(mod$model$Site),
Trap.ID=(mod$model$Trap.ID),
Location = c("Cliff Head","Golden Ridge","Irwin Reef","Seven Mile"))%>%
distinct()%>%
glimpse()
# Model for White----
# Hs.m.sw+Location+T1.s.sw
use.dat<-dat%>%
filter(Taxa=="White")%>%
glimpse()
mod=gam(response~s(T1.s.sw,k=3,bs='cr') +s(sst,k=3,bs='cr')+s(Site,bs='re')+ s(Trap.ID,bs='re')+ Location,family=tw(),data=use.dat)
summary(mod)
# Legal_predict - Location------
testdata <- expand.grid(T1.s.sw=mean(mod$model$T1.s.sw),
sst=mean(mod$model$sst),
Site=(mod$model$Site),
Trap.ID=(mod$model$Trap.ID),
Location = c("Cliff Head","Golden Ridge","Irwin Reef","Seven Mile"))%>%
distinct()%>%
glimpse()
fits <- predict.gam(mod, newdata=testdata, type='response', se.fit=T)
#head(fits,2)
predicts.catch.white = testdata%>%data.frame(fits)%>%
group_by(Location)%>% #only change here
summarise(response=mean(fit),se.fit=mean(se.fit))%>%
ungroup()%>%
glimpse()
# Plot legal catch - location ----
length.white.location<- ggplot(aes(x=Location,y=response,fill=Location,colour=Location), data=predicts.catch.white) +
ylab("Length (mm)")+
xlab('Location')+
# scale_fill_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_colour_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_x_discrete(limits = rev(levels(predicts.bds.status$Status)))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = response-se.fit,ymax = response+se.fit),width = 0.5) +
theme_classic()+
ylim(0, 120)+
Theme1
# annotate("text", x = -Inf, y=Inf, label = "(a)",vjust = 1, hjust = -.1,size=5)+
# annotate("text", x = -Inf, y=Inf, label = "   Dosinia subrosea",vjust = 1, hjust = -.1,size=5,fontface="italic")
length.white.location
# Plot legal catch - location ----
length.white.location<- ggplot(aes(x=Location,y=response,fill=Location,colour=Location), data=predicts.catch.white) +
ylab("Length (mm)")+
xlab('Location')+
# scale_fill_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_colour_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_x_discrete(limits = rev(levels(predicts.bds.status$Status)))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = response-se.fit,ymax = response+se.fit),width = 0.5) +
theme_classic()+
ylim(0, 100)+
Theme1
# annotate("text", x = -Inf, y=Inf, label = "(a)",vjust = 1, hjust = -.1,size=5)+
# annotate("text", x = -Inf, y=Inf, label = "   Dosinia subrosea",vjust = 1, hjust = -.1,size=5,fontface="italic")
length.white.location
# Plot legal catch - location ----
length.white.location<- ggplot(aes(x=Location,y=response,fill=Location,colour=Location), data=predicts.catch.white) +
ylab("Length (mm)")+
xlab('Location')+
# scale_fill_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_colour_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_x_discrete(limits = rev(levels(predicts.bds.status$Status)))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = response-se.fit,ymax = response+se.fit),width = 0.5) +
theme_classic()+
ylim(0, 100)+
ggtitle(position="none")+
Theme1
# Plot legal catch - location ----
length.white.location<- ggplot(aes(x=Location,y=response,fill=Location,colour=Location), data=predicts.catch.white) +
ylab("Length (mm)")+
xlab('Location')+
# scale_fill_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_colour_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_x_discrete(limits = rev(levels(predicts.bds.status$Status)))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = response-se.fit,ymax = response+se.fit),width = 0.5) +
theme_classic()+
ylim(0, 100)+
theme(legend.position = "none")+
Theme1
# annotate("text", x = -Inf, y=Inf, label = "(a)",vjust = 1, hjust = -.1,size=5)+
# annotate("text", x = -Inf, y=Inf, label = "   Dosinia subrosea",vjust = 1, hjust = -.1,size=5,fontface="italic")
length.white.location
# Plot legal catch - location ----
length.white.location<- ggplot(aes(x=Location,y=response,fill=Location,colour=Location), data=predicts.catch.white) +
ylab("Length (mm)")+
xlab('Location')+
# scale_fill_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_colour_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_x_discrete(limits = rev(levels(predicts.bds.status$Status)))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = response-se.fit,ymax = response+se.fit),width = 0.5) +
theme_classic()+
ylim(0, 100)+
Theme1+
theme(legend.position = "none")
# annotate("text", x = -Inf, y=Inf, label = "(a)",vjust = 1, hjust = -.1,size=5)+
# annotate("text", x = -Inf, y=Inf, label = "   Dosinia subrosea",vjust = 1, hjust = -.1,size=5,fontface="italic")
length.white.location
# Plotting Theme-
Theme1 <-
theme( # use theme_get() to see available options
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# legend.background = element_rect(fill="white"),
legend.background = element_blank(),
legend.key = element_blank(), # switch off the rectangle around symbols in the legend
legend.text = element_text(size=15),
legend.title = element_blank(),
legend.position = c(0.2, 0.8),
text=element_text(size=15),
strip.text.y = element_text(size = 15,angle = 0, colour="black"),
axis.title.x=element_text(vjust=0.3, size=15, colour="black",face="bold"),
axis.title.y=element_text(vjust=0.6, angle=90, size=15, colour="black",face="bold"),
axis.text.x=element_text(size=15, colour="black"),
axis.text.y=element_text(size=15, colour="black"),
axis.line.x=element_line(colour="black", size=0.5,linetype='solid'),
axis.line.y=element_line(colour="black", size=0.5,linetype='solid'),
strip.background = element_blank())
# Plot legal catch - location ----
length.white.location<- ggplot(aes(x=Location,y=response,fill=Location,colour=Location), data=predicts.catch.white) +
ylab("Length (mm)")+
xlab('Location')+
# scale_fill_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_colour_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_x_discrete(limits = rev(levels(predicts.bds.status$Status)))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = response-se.fit,ymax = response+se.fit),width = 0.5) +
theme_classic()+
ylim(0, 100)+
Theme1+
theme(legend.position = "none")+
ggtitle("Whites")
# annotate("text", x = -Inf, y=Inf, label = "(a)",vjust = 1, hjust = -.1,size=5)+
# annotate("text", x = -Inf, y=Inf, label = "   Dosinia subrosea",vjust = 1, hjust = -.1,size=5,fontface="italic")
length.white.location
# Legal_predict - Location------
testdata <- expand.grid(T1.s.sw=mean(mod$model$T1.s.sw),
sst=mean(mod$model$sst),
Site=(mod$model$Site),
Trap.ID=(mod$model$Trap.ID),
Location = c("Cliff Head","Golden Ridge","Irwin Reef","Seven Mile"))%>%
distinct()%>%
glimpse()
# Plot legal catch - location ----
length.white.location<- ggplot(aes(x=Location,y=response,fill=Location,colour=Location), data=predicts.catch.white) +
ylab("Carapace length (mm)")+
xlab('Location')+
# scale_fill_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_colour_manual(labels = c("Fished", "No-take"),values=c("red", "black"))+
# scale_x_discrete(limits = rev(levels(predicts.bds.status$Status)))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = response-se.fit,ymax = response+se.fit),width = 0.5) +
theme_classic()+
ylim(0, 100)+
Theme1+
theme(legend.position = "none")+
ggtitle("Whites")
# annotate("text", x = -Inf, y=Inf, label = "(a)",vjust = 1, hjust = -.1,size=5)+
# annotate("text", x = -Inf, y=Inf, label = "   Dosinia subrosea",vjust = 1, hjust = -.1,size=5,fontface="italic")
length.white.location
setwd("C:/GitHub/Analysis_Miller_lobster/Plots")
# Save plots----
setwd("C:/GitHub/Analysis_Miller_lobster/Plots")
ggsave(length.white.location,file="length.white.location.png", width = 30, height = 15,units = "cm")
# work.dir=("~/workspace/Analysis_Miller_WRL") #for ecocloud server
work.dir=("Z://Analysis_Miller_lobster") #for laptop
## Sub directories ----
data.dir<-paste(work.dir,"Data",sep="/")
map.dir<-paste(work.dir,"Map Layers",sep="/")
plots.dir<-paste(work.dir,"Plots",sep="/")
model.dir<-paste(work.dir,"Model_out_catch",sep="/")
# Bring in and format the data----
name<-"catch"
setwd(model.dir)
setwd("C:/GitHub/Analysis_Miller_lobster/Plots")
setwd("C:/GitHub/Analysis_Miller_lobster/Model_out_length")
setwd("C:/GitHub/Analysis_Miller_lobster/Model_out_length")
dat.taxa <-read.csv("catch_all.var.imp.csv")%>% #from local copy
rename(resp.var=X)%>%
gather(key=predictor,value=importance,2:ncol(.))%>%
filter(!resp.var=="All")%>%
glimpse()
dat.taxa <-read.csv("length_all.var.imp.csv")%>% #from local copy
rename(resp.var=X)%>%
gather(key=predictor,value=importance,2:ncol(.))%>%
filter(!resp.var=="All")%>%
glimpse()
# Plotting defaults----
library(ggplot2)
# Theme-
Theme1 <-
theme( # use theme_get() to see available options
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.background = element_rect(fill="white"),
legend.key = element_blank(), # switch off the rectangle around symbols in the legend
legend.text = element_text(size=8),
legend.title = element_text(size=8, face="bold"),
legend.position = "top",
legend.direction="horizontal",
text=element_text(size=10),
strip.text.y = element_text(size = 10,angle = 0),
axis.title.x=element_text(vjust=0.3, size=10),
axis.title.y=element_text(vjust=0.6, angle=90, size=10),
axis.text.x=element_text(size=14,angle = 90, hjust=1,vjust=0.5,face="bold", colour = "black"),
axis.text.y=element_text(size=14,face="bold", colour = "black"),
axis.line.x=element_line(colour="black", size=0.5,linetype='solid'),
axis.line.y=element_line(colour="black", size=0.5,linetype='solid'),
strip.background = element_blank())
# colour ramps-
re <- colorRampPalette(c("mistyrose", "red2","darkred"))(200)
# Labels-
legend_title<-"Importance"
# Annotations-
unique(dat.taxa$predictor)
unique(dat.taxa$resp.var)
dat.taxa.label<-dat.taxa%>%
mutate(label=NA)%>%
mutate(label=ifelse(predictor=="sst"&resp.var=="White","X",ifelse(predictor=="T1.s.sw"&resp.var=="White","X",ifelse(predictor=="Location"&resp.var=="White","X",label))))%>%
mutate(label=ifelse(predictor=="sst"&resp.var=="Red","X",ifelse(predictor=="T1.s.sw"&resp.var=="Sublegal","X",ifelse(predictor=="Hs.m.sw"&resp.var=="Red","X",label))))%>%
glimpse()
# Plot gg.importance.scores ----
gg.importance.scores <- ggplot(dat.taxa.label, aes(x=predictor,y=resp.var,fill=importance))+
geom_tile(show.legend=T) +
scale_fill_gradientn(legend_title,colours=c("white", re), na.value = "grey98",limits = c(0.2, max(dat.taxa.label$importance)))+
scale_x_discrete(limits=c("Location","Hs.m.sw","T1.s.sw","sst"),
labels=c("Location","Swell height","Swell period","SST"
))+
scale_y_discrete(limits = c("White","Red"
),
labels=c("White","Red"))+
xlab(NULL)+
ylab(NULL)+
theme_classic()+
Theme1+
geom_text(aes(label=label))
gg.importance.scores
# Plot gg.importance.scores ----
gg.importance.scores <- ggplot(dat.taxa.label, aes(x=predictor,y=resp.var,fill=importance))+
geom_tile(show.legend=T) +
scale_fill_gradientn(legend_title,colours=c("white", re), na.value = "grey98",limits = c(0.1, max(dat.taxa.label$importance)))+
scale_x_discrete(limits=c("Location","Hs.m.sw","T1.s.sw","sst"),
labels=c("Location","Swell height","Swell period","SST"
))+
scale_y_discrete(limits = c("White","Red"
),
labels=c("White","Red"))+
xlab(NULL)+
ylab(NULL)+
theme_classic()+
Theme1+
geom_text(aes(label=label))
gg.importance.scores
# Plot gg.importance.scores ----
gg.importance.scores <- ggplot(dat.taxa.label, aes(x=predictor,y=resp.var,fill=importance))+
geom_tile(show.legend=T) +
scale_fill_gradientn(legend_title,colours=c("white", re), na.value = "grey98",limits = c(0.0, max(dat.taxa.label$importance)))+
scale_x_discrete(limits=c("Location","Hs.m.sw","T1.s.sw","sst"),
labels=c("Location","Swell height","Swell period","SST"
))+
scale_y_discrete(limits = c("White","Red"
),
labels=c("White","Red"))+
xlab(NULL)+
ylab(NULL)+
theme_classic()+
Theme1+
geom_text(aes(label=label))
gg.importance.scores
setwd("C:/GitHub/Analysis_Miller_lobster/Model_out_length")
setwd("C:/GitHub/Analysis_Miller_lobster/Model_out_length")
ggsave(gg.importance.scores,file="length.location.importance.png", width = 30, height = 10,units = "cm")
setwd("C:/GitHub/Analysis_Miller_lobster/Plots")
setwd("C:/GitHub/Analysis_Miller_lobster/Plots")
ggsave(gg.importance.scores,file="length.location.importance.png", width = 30, height = 10,units = "cm")
