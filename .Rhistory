work.dir=("C:/GitHub/Analysis_Miller_lobster") # For Brooke
# Sub directories ----
data.dir<-paste(work.dir,"Data",sep="/")
# Read in data ----
setwd(data.dir)
dir()
length<-read.csv("length.csv")%>%
dplyr::select(Source,Sample,Tag.number,Recapture,Sex,Colour,Outlier,Carapace.length)%>%
#dplyr::filter(!Outlier%in%c("y"))%>%
dplyr::filter(!Tag.number%in%c("K3211"))%>%
#dplyr::filter(Tag.number%in%c("191410","191033","K0287","K0966","K0712","K0477"))%>% # Filter to see good test
glimpse()
metadata<-read.csv("metadata.csv")%>%
dplyr::filter(!Successful.count%in%c("No"))%>%
dplyr::distinct(Source,Sample,Location,Latitude,Longitude,Date,Fisher)%>%
dplyr::filter(!Source%in%c("ben-seven-mile"))%>%
glimpse()
# Join data together ----
dat<-full_join(length,metadata)%>%
dplyr::filter(!is.na(Latitude))%>%
glimpse()
# Create Anonymous fisher names ----
fishers<-dat%>%
distinct(Fisher)%>%
filter(!is.na(Fisher))%>%
mutate(Number=1:nrow(.))%>%
mutate(Anonymous.fisher=paste("Fisher",Number,sep=" "))
# Create Anonymous fisher names ----
fishers<-dat%>%
distinct(Fisher)%>%
filter(!is.na(Fisher))%>%
mutate(Number=1:nrow(.))%>%
mutate(Anonymous.fisher=paste("Fisher",Number,sep=" "))%>%
glimpse()
# Join anonymous names back to dat ----
dat<-left_join(dat,fishers)%>%
select(-c(Number,Fisher))
# Join data together ----
dat<-full_join(length,metadata)%>%
dplyr::filter(!is.na(Latitude))%>%
glimpse()
# Create Anonymous fisher names ----
fishers<-dat%>%
distinct(Fisher)%>%
filter(!is.na(Fisher))%>%
mutate(Number=1:nrow(.))%>%
mutate(Anonymous.fisher=paste("Fisher",Number,sep=" "))%>%
glimpse()
# Join anonymous names back to dat ----
dat<-left_join(dat,fishers)%>%
dplyr::select(-c(Number,Fisher))%>%
glimpse()
# Create a releases and a recaptures dataframe ----
dat.recaps<-dat%>%
dplyr::filter(Recapture%in%c("TRUE"))%>%
dplyr::select(-c(Source,Sample,Recapture,Colour,Outlier,Location))
# Create a releases and a recaptures dataframe ----
dat.recaps<-dat%>%
dplyr::filter(Recapture%in%c("TRUE"))%>%
dplyr::select(-c(Source,Sample,Recapture,Colour,Outlier,Location))%>%
glimpse()
View(dat.recaps)
# Fisher recaptures to join back in names ----
dat.fishers<-dat.recaps%>%
distinct(Date,Tag.number,Anonymous.fisher)%>%
dplyr::rename(Recapture.date=Date)%>%
dplyr::filter(!is.na(Anonymous.fisher))%>%
glimpse()
dat.releases<-dat%>%
dplyr::filter(!Recapture%in%c("TRUE"))
dat.releases.caught.again<-semi_join(dat.releases,dat.recaps,by="Tag.number")%>%
dplyr::select(-c(Source,Sample,Sex,Colour,Outlier,Location,Recapture,Carapace.length))%>%
dplyr::filter(!is.na(Tag.number))
# Create data for map ----
# Good tag to check 191410 (to see if everything has worked)
dat.map.recaptures<-dat.releases.caught.again%>%
dplyr::rename(Release.latitude=Latitude,Release.longitude=Longitude,Release.date=Date)%>% #
left_join(dat.recaps)%>%
bind_rows(dat.releases.caught.again)%>%
arrange(Tag.number,Date)%>%
dplyr::group_by(Tag.number)%>%
dplyr::mutate(Release.latitude=lag(Latitude))%>%
dplyr::mutate(Release.longitude=lag(Longitude))%>%
dplyr::mutate(Release.date=lag(Date))%>%
dplyr::filter(!is.na(Sex))%>%
dplyr::rename(Recapture.latitude=Latitude,Recapture.longitude=Longitude,Recapture.date=Date)%>%
dplyr::mutate(Days.between.captures = (as.Date(as.character(Recapture.date), format="%Y-%m-%d")) - (as.Date(as.character(Release.date))))%>%
dplyr::mutate(Labels=paste("Tag ",Tag.number,". At liberty for ",Days.between.captures," days before being caught again on ",Recapture.date," (",Carapace.length," mm).",sep=""))%>%
dplyr::ungroup()%>%
left_join(dat.fishers)%>%
glimpse()
View(dat.map.recaptures)
# Create data for map ----
# Good tag to check 191410 (to see if everything has worked)
dat.map.recaptures<-dat.releases.caught.again%>%
dplyr::rename(Release.latitude=Latitude,Release.longitude=Longitude,Release.date=Date)%>% #
left_join(dat.recaps)%>%
bind_rows(dat.releases.caught.again)%>%
arrange(Tag.number,Date)%>%
dplyr::group_by(Tag.number)%>%
dplyr::mutate(Release.latitude=lag(Latitude))%>%
dplyr::mutate(Release.longitude=lag(Longitude))%>%
dplyr::mutate(Release.date=lag(Date))%>%
dplyr::filter(!is.na(Sex))%>%
dplyr::rename(Recapture.latitude=Latitude,Recapture.longitude=Longitude,Recapture.date=Date)%>%
dplyr::mutate(Days.between.captures = (as.Date(as.character(Recapture.date), format="%Y-%m-%d")) - (as.Date(as.character(Release.date))))%>%
dplyr::mutate(Labels=paste("Tag ",Tag.number,". At liberty for ",Days.between.captures," days before being caught again on ",Recapture.date," (",Carapace.length," mm).",sep=""))%>%
dplyr::ungroup()%>%
left_join(.,dat.fishers)%>%
glimpse()
# Create data for map ----
# Good tag to check 191410 (to see if everything has worked)
dat.map.recaptures<-dat.releases.caught.again%>%
dplyr::rename(Release.latitude=Latitude,Release.longitude=Longitude,Release.date=Date)%>% #
left_join(dat.recaps)%>%
bind_rows(dat.releases.caught.again)%>%
arrange(Tag.number,Date)%>%
dplyr::group_by(Tag.number)%>%
dplyr::mutate(Release.latitude=lag(Latitude))%>%
dplyr::mutate(Release.longitude=lag(Longitude))%>%
dplyr::mutate(Release.date=lag(Date))%>%
dplyr::filter(!is.na(Sex))%>%
dplyr::rename(Recapture.latitude=Latitude,Recapture.longitude=Longitude,Recapture.date=Date)%>%
dplyr::mutate(Days.between.captures = (as.Date(as.character(Recapture.date), format="%Y-%m-%d")) - (as.Date(as.character(Release.date))))%>%
dplyr::mutate(Labels=paste("Tag ",Tag.number,". At liberty for ",Days.between.captures," days before being caught again on ",Recapture.date," (",Carapace.length," mm).",sep=""))%>%
dplyr::ungroup()%>%
dplyr::select(-c(Anonymous.fisher))%>%
left_join(.,dat.fishers)%>%
glimpse()
dat.releases.caught.again<-semi_join(dat.releases,dat.recaps,by="Tag.number")%>%
dplyr::select(-c(Source,Sample,Sex,Colour,Outlier,Location,Recapture,Carapace.length,Anonymous.fisher))%>%
dplyr::filter(!is.na(Tag.number))
# Create data for map ----
# Good tag to check 191410 (to see if everything has worked)
dat.map.recaptures<-dat.releases.caught.again%>%
dplyr::rename(Release.latitude=Latitude,Release.longitude=Longitude,Release.date=Date)%>% #
left_join(dat.recaps)%>%
bind_rows(dat.releases.caught.again)%>%
arrange(Tag.number,Date)%>%
dplyr::group_by(Tag.number)%>%
dplyr::mutate(Release.latitude=lag(Latitude))%>%
dplyr::mutate(Release.longitude=lag(Longitude))%>%
dplyr::mutate(Release.date=lag(Date))%>%
dplyr::filter(!is.na(Sex))%>%
dplyr::rename(Recapture.latitude=Latitude,Recapture.longitude=Longitude,Recapture.date=Date)%>%
dplyr::mutate(Days.between.captures = (as.Date(as.character(Recapture.date), format="%Y-%m-%d")) - (as.Date(as.character(Release.date))))%>%
dplyr::mutate(Labels=paste("Tag ",Tag.number,". At liberty for ",Days.between.captures," days before being caught again on ",Recapture.date," (",Carapace.length," mm).",sep=""))%>%
dplyr::ungroup()%>%
dplyr::select(-c(Anonymous.fisher))%>%
left_join(.,dat.fishers)%>%
glimpse()
# Need dots for initial releases
dat.map.releases<-semi_join(dat.releases,dat.recaps,by="Tag.number")%>%
dplyr::select(-c(Source,Sample,Colour,Outlier,Location,Recapture))%>%
dplyr::rename(Release.latitude=Latitude,Release.longitude=Longitude,Release.date=Date)%>%
dplyr::mutate(Labels=paste("Tag ",Tag.number,". A ",Sex," lobster, first caught on  ",Release.date," (",Carapace.length," mm).",sep=""))%>%
dplyr::filter(!is.na(Tag.number))%>%
glimpse()
glimpse(dat.map.releases)
glimpse(dat.map.recaptures)
dat.dots.recap<-dat.map.recaptures%>%
dplyr::rename(Latitude=Recapture.latitude,Longitude=Recapture.longitude)%>%
dplyr::select(Tag.number,Sex,Latitude,Longitude,Labels,Carapace.length,Anonymous.fisher)
dat.dots.release<-dat.map.releases%>%
dplyr::rename(Latitude=Release.latitude,Longitude=Release.longitude)%>%
dplyr::select(Tag.number,Sex,Latitude,Longitude,Labels)
dat.dots<-bind_rows(dat.dots.recap,dat.dots.release)%>%
dplyr::group_by(Latitude,Longitude)%>%
dplyr::summarise(Labels=paste(strwrap(Labels), collapse = " <br> <br> "))%>%
ungroup()
dat.dots.map<-bind_rows(dat.dots.recap,dat.dots.release)%>%
select(-c(Labels))%>%
left_join(.,dat.dots)
pal <- colorFactor(c( "hotpink","blue"), domain = c("Male", "Female"))
unique(dat.dots.map$Anonymous.fisher)
map.all.leaflet <- leaflet(dat.dots.map) %>%
fitBounds(~min(Longitude), ~min(Latitude), ~max(Longitude), ~max(Latitude))%>%
addProviderTiles(providers$Stamen.TonerLite, group = "Black and white")%>%
addTiles(group="Open street map")%>%
# All Lobsters
addCircleMarkers(data=dat.dots.map,~Longitude,~Latitude,radius = 4,color = ~(Anonymous.fisher),stroke = FALSE, fillOpacity = 0.5,popup = ~as.character(Labels),group="All data")%>% # Sub legal
addScaleBar()
map.all.leaflet
unique(dat.dots.map$Anonymous.fisher)
pal <- colorFactor(domain = dat.dots.map$Anonymous.fisher)
unique(dat.dots.map$Anonymous.fisher)
pal <- colorFactor(sample(rainbow(24),24),domain = dat.dots.map$Anonymous.fisher)
map.all.leaflet <- leaflet(dat.dots.map) %>%
fitBounds(~min(Longitude), ~min(Latitude), ~max(Longitude), ~max(Latitude))%>%
addProviderTiles(providers$Stamen.TonerLite, group = "Black and white")%>%
addTiles(group="Open street map")%>%
# All Lobsters
addCircleMarkers(data=dat.dots.map,~Longitude,~Latitude,radius = 4,color = ~pal(Anonymous.fisher),stroke = FALSE, fillOpacity = 0.5,popup = ~as.character(Labels),group="All data")%>% # Sub legal
addScaleBar()
map.all.leaflet
map.all.leaflet <- leaflet(dat.dots.map) %>%
fitBounds(~min(Longitude), ~min(Latitude), ~max(Longitude), ~max(Latitude))%>%
addProviderTiles(providers$Stamen.TonerLite, group = "Black and white")%>%
addTiles(group="Open street map")%>%
# All Lobsters
addCircleMarkers(data=dat.dots.map,~Longitude,~Latitude,radius = 4,color = ~pal(Anonymous.fisher),stroke = FALSE, fillOpacity = 0.5,popup = ~as.character(Labels),group="All data")%>% # Sub legal
addScaleBar()%>%
addLegend("bottomright", pal = pal, values = ~Anonymous.fisher,title = "Fisher",opacity = 1,group="All data")
map.all.leaflet
replace_na(list(Anonymous.fisher="UWA")%>%
# Fisher recaptures to join back in names ----
dat.fishers<-dat.recaps%>%
distinct(Date,Tag.number,Anonymous.fisher)%>%
dplyr::rename(Recapture.date=Date)%>%
replace_na(list(Anonymous.fisher="UWA"))%>%
dplyr::filter(!is.na(Anonymous.fisher))%>%
glimpse()
dat.releases<-dat%>%
dplyr::filter(!Recapture%in%c("TRUE"))
# Fisher recaptures to join back in names ----
dat.fishers<-dat.recaps%>%
distinct(Date,Tag.number,Anonymous.fisher)%>%
dplyr::rename(Recapture.date=Date)%>%
replace_na(list(Anonymous.fisher="UWA"))%>%
dplyr::filter(!is.na(Anonymous.fisher))%>%
glimpse()
dat.releases<-dat%>%
dplyr::filter(!Recapture%in%c("TRUE"))
dat.releases.caught.again<-semi_join(dat.releases,dat.recaps,by="Tag.number")%>%
dplyr::select(-c(Source,Sample,Sex,Colour,Outlier,Location,Recapture,Carapace.length,Anonymous.fisher))%>%
dplyr::filter(!is.na(Tag.number))
# Create data for map ----
# Good tag to check 191410 (to see if everything has worked)
dat.map.recaptures<-dat.releases.caught.again%>%
dplyr::rename(Release.latitude=Latitude,Release.longitude=Longitude,Release.date=Date)%>% #
left_join(dat.recaps)%>%
bind_rows(dat.releases.caught.again)%>%
arrange(Tag.number,Date)%>%
dplyr::group_by(Tag.number)%>%
dplyr::mutate(Release.latitude=lag(Latitude))%>%
dplyr::mutate(Release.longitude=lag(Longitude))%>%
dplyr::mutate(Release.date=lag(Date))%>%
dplyr::filter(!is.na(Sex))%>%
dplyr::rename(Recapture.latitude=Latitude,Recapture.longitude=Longitude,Recapture.date=Date)%>%
dplyr::mutate(Days.between.captures = (as.Date(as.character(Recapture.date), format="%Y-%m-%d")) - (as.Date(as.character(Release.date))))%>%
dplyr::mutate(Labels=paste("Tag ",Tag.number,". At liberty for ",Days.between.captures," days before being caught again on ",Recapture.date," (",Carapace.length," mm).",sep=""))%>%
dplyr::ungroup()%>%
dplyr::select(-c(Anonymous.fisher))%>%
left_join(.,dat.fishers)%>%
glimpse()
# Need dots for initial releases
dat.map.releases<-semi_join(dat.releases,dat.recaps,by="Tag.number")%>%
dplyr::select(-c(Source,Sample,Colour,Outlier,Location,Recapture))%>%
dplyr::rename(Release.latitude=Latitude,Release.longitude=Longitude,Release.date=Date)%>%
dplyr::mutate(Labels=paste("Tag ",Tag.number,". A ",Sex," lobster, first caught on  ",Release.date," (",Carapace.length," mm).",sep=""))%>%
dplyr::filter(!is.na(Tag.number))%>%
glimpse()
glimpse(dat.map.releases)
glimpse(dat.map.recaptures)
dat.dots.recap<-dat.map.recaptures%>%
dplyr::rename(Latitude=Recapture.latitude,Longitude=Recapture.longitude)%>%
dplyr::select(Tag.number,Sex,Latitude,Longitude,Labels,Carapace.length,Anonymous.fisher)
dat.dots.release<-dat.map.releases%>%
dplyr::rename(Latitude=Release.latitude,Longitude=Release.longitude)%>%
dplyr::select(Tag.number,Sex,Latitude,Longitude,Labels)
dat.dots<-bind_rows(dat.dots.recap,dat.dots.release)%>%
dplyr::group_by(Latitude,Longitude)%>%
dplyr::summarise(Labels=paste(strwrap(Labels), collapse = " <br> <br> "))%>%
ungroup()
dat.dots.map<-bind_rows(dat.dots.recap,dat.dots.release)%>%
select(-c(Labels))%>%
left_join(.,dat.dots)
pal <- colorFactor(c( "hotpink","blue"), domain = c("Male", "Female"))
pal <- colorFactor(sample(rainbow(24),24),domain = dat.dots.map$Anonymous.fisher)
unique(dat.dots.map$Anonymous.fisher)
map.all.leaflet <- leaflet(dat.dots.map) %>%
fitBounds(~min(Longitude), ~min(Latitude), ~max(Longitude), ~max(Latitude))%>%
addProviderTiles(providers$Stamen.TonerLite, group = "Black and white")%>%
addTiles(group="Open street map")%>%
# All Lobsters
addCircleMarkers(data=dat.dots.map,~Longitude,~Latitude,radius = 4,color = ~pal(Anonymous.fisher),stroke = FALSE, fillOpacity = 0.5,popup = ~as.character(Labels),group="All data")%>% # Sub legal
addScaleBar()%>%
addLegend("bottomright", pal = pal, values = ~Anonymous.fisher,title = "Fisher",opacity = 1,group="All data")
map.all.leaflet
dat.dots.map<-bind_rows(dat.dots.recap,dat.dots.release)%>%
select(-c(Labels))%>%
left_join(.,dat.dots)%>%
replace_na(Anonymoure.fisher="UWA")
pal <- colorFactor(c( "hotpink","blue"), domain = c("Male", "Female"))
pal <- colorFactor(sample(rainbow(24),24),domain = dat.dots.map$Anonymous.fisher)
unique(dat.dots.map$Anonymous.fisher)
map.all.leaflet <- leaflet(dat.dots.map) %>%
fitBounds(~min(Longitude), ~min(Latitude), ~max(Longitude), ~max(Latitude))%>%
addProviderTiles(providers$Stamen.TonerLite, group = "Black and white")%>%
addTiles(group="Open street map")%>%
# All Lobsters
addCircleMarkers(data=dat.dots.map,~Longitude,~Latitude,radius = 4,color = ~pal(Anonymous.fisher),stroke = FALSE, fillOpacity = 0.5,popup = ~as.character(Labels),group="All data")%>% # Sub legal
addScaleBar()%>%
addLegend("bottomright", pal = pal, values = ~Anonymous.fisher,title = "Fisher",opacity = 1,group="All data")
map.all.leaflet
dat.dots.map<-bind_rows(dat.dots.recap,dat.dots.release)%>%
select(-c(Labels))%>%
left_join(.,dat.dots)%>%
replace_na(Anonymous.fisher="UWA")
pal <- colorFactor(c( "hotpink","blue"), domain = c("Male", "Female"))
pal <- colorFactor(sample(rainbow(24),24),domain = dat.dots.map$Anonymous.fisher)
unique(dat.dots.map$Anonymous.fisher)
map.all.leaflet <- leaflet(dat.dots.map) %>%
fitBounds(~min(Longitude), ~min(Latitude), ~max(Longitude), ~max(Latitude))%>%
addProviderTiles(providers$Stamen.TonerLite, group = "Black and white")%>%
addTiles(group="Open street map")%>%
# All Lobsters
addCircleMarkers(data=dat.dots.map,~Longitude,~Latitude,radius = 4,color = ~pal(Anonymous.fisher),stroke = FALSE, fillOpacity = 0.5,popup = ~as.character(Labels),group="All data")%>% # Sub legal
addScaleBar()%>%
addLegend("bottomright", pal = pal, values = ~Anonymous.fisher,title = "Fisher",opacity = 1,group="All data")
map.all.leaflet
# Combine recaptures and releases together to make a dataframe that has all lines ----
dat.map.all<-bind_rows(dat.map.releases,dat.map.recaptures)%>%
arrange(Tag.number,Release.date)%>%
dplyr::mutate(Release.latitude=ifelse(((!Release.latitude==Recapture.latitude)&(!is.na(Recapture.latitude))),Recapture.latitude,Release.latitude))%>% # So if release and recapture are both not na and are different then release = recapture this is two get a line when only recaptured once
dplyr::mutate(Release.longitude=ifelse(((!Release.longitude==Recapture.longitude)&(!is.na(Recapture.longitude))),Recapture.longitude,Release.longitude))%>%
mutate(num=1:nrow(.))%>%
mutate(Progress=round((num/nrow(.))*100,digits=2))%>%
glimpse()
dat.dots.map<-bind_rows(dat.dots.recap,dat.dots.release)%>%
select(-c(Labels))%>%
left_join(.,dat.dots)%>%
replace_na(list(Anonymous.fisher="UWA"))
pal <- colorFactor(c( "hotpink","blue"), domain = c("Male", "Female"))
pal <- colorFactor(sample(rainbow(24),24),domain = dat.dots.map$Anonymous.fisher)
unique(dat.dots.map$Anonymous.fisher)
map.all.leaflet <- leaflet(dat.dots.map) %>%
fitBounds(~min(Longitude), ~min(Latitude), ~max(Longitude), ~max(Latitude))%>%
addProviderTiles(providers$Stamen.TonerLite, group = "Black and white")%>%
addTiles(group="Open street map")%>%
# All Lobsters
addCircleMarkers(data=dat.dots.map,~Longitude,~Latitude,radius = 4,color = ~pal(Anonymous.fisher),stroke = FALSE, fillOpacity = 0.5,popup = ~as.character(Labels),group="All data")%>% # Sub legal
addScaleBar()%>%
addLegend("bottomright", pal = pal, values = ~Anonymous.fisher,title = "Fisher",opacity = 1,group="All data")
map.all.leaflet
# Create Anonymous fisher names ----
fishers<-dat%>%
distinct(Fisher)%>%
filter(!is.na(Fisher))%>%
mutate(Letter=LETTERS[c(1:3)], b = 4:7)
View(fishers)
# Create Anonymous fisher names ----
fishers<-dat%>%
distinct(Fisher)%>%
filter(!is.na(Fisher))%>%
mutate(Letter=LETTERS(1:25))
# Create Anonymous fisher names ----
fishers<-dat%>%
distinct(Fisher)%>%
filter(!is.na(Fisher))%>%
mutate(Letter=a:y)
# Create Anonymous fisher names ----
fishers<-dat%>%
distinct(Fisher)%>%
filter(!is.na(Fisher))%>%
mutate(Number=1:nrow(.))%>%
mutate(Letter=LETTERS())
# Join data together ----
dat<-full_join(length,metadata)%>%
dplyr::filter(!is.na(Latitude))%>%
glimpse()
# Create Anonymous fisher names ----
fishers<-dat%>%
distinct(Fisher)%>%
filter(!is.na(Fisher))%>%
mutate(Number=1:nrow(.))%>%
mutate(Letter=LETTERS())
# Create Anonymous fisher names ----
fishers<-dat%>%
distinct(Fisher)%>%
filter(!is.na(Fisher))%>%
mutate(Number=1:nrow(.))%>%
mutate(Letter=LETTERS(Number))
# Create Anonymous fisher names ----
fishers<-dat%>%
distinct(Fisher)%>%
filter(!is.na(Fisher))%>%
mutate(Number=1:nrow(.))%>%
mutate(Letter=LETTERS(Number))
# Create Anonymous fisher names ----
fishers<-dat%>%
distinct(Fisher)%>%
filter(!is.na(Fisher))%>%
mutate(Number=1:nrow(.))%>%
mutate(Letter=LETTERS[Number])
# Create Anonymous fisher names ----
fishers<-dat%>%
distinct(Fisher)%>%
filter(!is.na(Fisher))%>%
mutate(Number=1:nrow(.))%>%
mutate(Letter=LETTERS[Number])%>%
mutate(Anonymous.fisher=paste("Fisher",Letter,sep=" "))%>%
glimpse()
# Join anonymous names back to dat ----
dat<-left_join(dat,fishers)%>%
dplyr::select(-c(Number,Fisher))%>%
glimpse()
# Create a releases and a recaptures dataframe ----
dat.recaps<-dat%>%
dplyr::filter(Recapture%in%c("TRUE"))%>%
dplyr::select(-c(Source,Sample,Recapture,Colour,Outlier,Location))%>%
glimpse()
# Fisher recaptures to join back in names ----
dat.fishers<-dat.recaps%>%
distinct(Date,Tag.number,Anonymous.fisher)%>%
dplyr::rename(Recapture.date=Date)%>%
replace_na(list(Anonymous.fisher="UWA"))%>%
dplyr::filter(!is.na(Anonymous.fisher))%>%
glimpse()
dat.releases<-dat%>%
dplyr::filter(!Recapture%in%c("TRUE"))
dat.releases.caught.again<-semi_join(dat.releases,dat.recaps,by="Tag.number")%>%
dplyr::select(-c(Source,Sample,Sex,Colour,Outlier,Location,Recapture,Carapace.length,Anonymous.fisher))%>%
dplyr::filter(!is.na(Tag.number))
# Create data for map ----
# Good tag to check 191410 (to see if everything has worked)
dat.map.recaptures<-dat.releases.caught.again%>%
dplyr::rename(Release.latitude=Latitude,Release.longitude=Longitude,Release.date=Date)%>% #
left_join(dat.recaps)%>%
bind_rows(dat.releases.caught.again)%>%
arrange(Tag.number,Date)%>%
dplyr::group_by(Tag.number)%>%
dplyr::mutate(Release.latitude=lag(Latitude))%>%
dplyr::mutate(Release.longitude=lag(Longitude))%>%
dplyr::mutate(Release.date=lag(Date))%>%
dplyr::filter(!is.na(Sex))%>%
dplyr::rename(Recapture.latitude=Latitude,Recapture.longitude=Longitude,Recapture.date=Date)%>%
dplyr::mutate(Days.between.captures = (as.Date(as.character(Recapture.date), format="%Y-%m-%d")) - (as.Date(as.character(Release.date))))%>%
dplyr::mutate(Labels=paste("Tag ",Tag.number,". At liberty for ",Days.between.captures," days before being caught again on ",Recapture.date," (",Carapace.length," mm).",sep=""))%>%
dplyr::ungroup()%>%
dplyr::select(-c(Anonymous.fisher))%>%
left_join(.,dat.fishers)%>%
glimpse()
# Need dots for initial releases
dat.map.releases<-semi_join(dat.releases,dat.recaps,by="Tag.number")%>%
dplyr::select(-c(Source,Sample,Colour,Outlier,Location,Recapture))%>%
dplyr::rename(Release.latitude=Latitude,Release.longitude=Longitude,Release.date=Date)%>%
dplyr::mutate(Labels=paste("Tag ",Tag.number,". A ",Sex," lobster, first caught on  ",Release.date," (",Carapace.length," mm).",sep=""))%>%
dplyr::filter(!is.na(Tag.number))%>%
glimpse()
glimpse(dat.map.releases)
glimpse(dat.map.recaptures)
dat.dots.recap<-dat.map.recaptures%>%
dplyr::rename(Latitude=Recapture.latitude,Longitude=Recapture.longitude)%>%
dplyr::select(Tag.number,Sex,Latitude,Longitude,Labels,Carapace.length,Anonymous.fisher)
dat.dots.release<-dat.map.releases%>%
dplyr::rename(Latitude=Release.latitude,Longitude=Release.longitude)%>%
dplyr::select(Tag.number,Sex,Latitude,Longitude,Labels)
dat.dots<-bind_rows(dat.dots.recap,dat.dots.release)%>%
dplyr::group_by(Latitude,Longitude)%>%
dplyr::summarise(Labels=paste(strwrap(Labels), collapse = " <br> <br> "))%>%
ungroup()
dat.dots.map<-bind_rows(dat.dots.recap,dat.dots.release)%>%
select(-c(Labels))%>%
left_join(.,dat.dots)%>%
replace_na(list(Anonymous.fisher="UWA"))
pal <- colorFactor(c( "hotpink","blue"), domain = c("Male", "Female"))
pal <- colorFactor(sample(rainbow(24),24),domain = dat.dots.map$Anonymous.fisher)
unique(dat.dots.map$Anonymous.fisher)
map.all.leaflet <- leaflet(dat.dots.map) %>%
fitBounds(~min(Longitude), ~min(Latitude), ~max(Longitude), ~max(Latitude))%>%
addProviderTiles(providers$Stamen.TonerLite, group = "Black and white")%>%
addTiles(group="Open street map")%>%
# All Lobsters
addCircleMarkers(data=dat.dots.map,~Longitude,~Latitude,radius = 4,color = ~pal(Anonymous.fisher),stroke = FALSE, fillOpacity = 0.5,popup = ~as.character(Labels),group="All data")%>% # Sub legal
addScaleBar()%>%
addLegend("bottomright", pal = pal, values = ~Anonymous.fisher,title = "Fisher",opacity = 1,group="All data")
map.all.leaflet
# Join anonymous names back to dat ----
dat<-left_join(dat,fishers)%>%
dplyr::select(-c(Number,Fisher))%>%
glimpse()
View(dat)
# Create a releases and a recaptures dataframe ----
dat.recaps<-dat%>%
dplyr::filter(Recapture%in%c("TRUE"))%>%
dplyr::select(-c(Source,Sample,Recapture,Colour,Outlier,Location))%>%
glimpse()
# Fisher recaptures to join back in names ----
dat.fishers<-dat.recaps%>%
distinct(Date,Tag.number,Anonymous.fisher)%>%
dplyr::rename(Recapture.date=Date)%>%
replace_na(list(Anonymous.fisher="UWA"))%>%
dplyr::filter(!is.na(Anonymous.fisher))%>%
glimpse()
dat.releases<-dat%>%
dplyr::filter(!Recapture%in%c("TRUE"))
dat.releases.caught.again<-semi_join(dat.releases,dat.recaps,by="Tag.number")%>%
dplyr::select(-c(Source,Sample,Sex,Colour,Outlier,Location,Recapture,Carapace.length,Anonymous.fisher))%>%
dplyr::filter(!is.na(Tag.number))
# Create data for map ----
# Good tag to check 191410 (to see if everything has worked)
dat.map.recaptures<-dat.releases.caught.again%>%
dplyr::rename(Release.latitude=Latitude,Release.longitude=Longitude,Release.date=Date)%>% #
left_join(dat.recaps)%>%
bind_rows(dat.releases.caught.again)%>%
arrange(Tag.number,Date)%>%
dplyr::group_by(Tag.number)%>%
dplyr::mutate(Release.latitude=lag(Latitude))%>%
dplyr::mutate(Release.longitude=lag(Longitude))%>%
dplyr::mutate(Release.date=lag(Date))%>%
dplyr::filter(!is.na(Sex))%>%
dplyr::rename(Recapture.latitude=Latitude,Recapture.longitude=Longitude,Recapture.date=Date)%>%
dplyr::mutate(Days.between.captures = (as.Date(as.character(Recapture.date), format="%Y-%m-%d")) - (as.Date(as.character(Release.date))))%>%
dplyr::mutate(Labels=paste("Tag ",Tag.number,". At liberty for ",Days.between.captures," days before being caught again on ",Recapture.date," (",Carapace.length," mm).",sep=""))%>%
dplyr::ungroup()%>%
dplyr::select(-c(Anonymous.fisher))%>%
left_join(.,dat.fishers)%>%
glimpse()
View(dat.map.recaptures)
View(dat.fishers)
View(dat.map.recaptures)
