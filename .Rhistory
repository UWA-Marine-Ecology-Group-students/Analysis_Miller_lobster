arrange(Sample)%>%
glimpse()
length(unique(sum.per.pot$Sample))
1857*3
5571
#Save sum data----
setwd(data.dir)
write.csv(sum.per.pot,"dat.catch.csv", row.names=F)
#Find mean catch per pot per date per location----
glimpse(dat.pot)
glimpse(dat.length)
dat <- dplyr::full_join(dat.length, dat.pot)%>%
filter(!is.na(Location))%>% #Removes the pwo/rivermouth data from the length data. 587 removed
glimpse()
legal.sum<- dat%>%
mutate(sizeclass= ifelse(Carapace.length>=76.0,"Legal", "Sublegal"))%>%
filter(!is.na(Carapace.length))%>%
group_by(Sample, sizeclass)%>%
dplyr::summarise(Count=sum(Count))%>%
ungroup()%>%
distinct()%>%
glimpse()
all.sum <-dat%>%
group_by(Sample)%>%
dplyr::summarise(Count=sum(Count))%>%
ungroup()%>%
mutate(sizeclass="All")%>%
distinct()%>%
bind_rows(.,legal.sum)%>%
arrange(Sample)%>%
glimpse()
location <- dat%>%
select(Date, Sample, Location, Site, Longitude, Latitude)%>%
distinct()%>%
group_by(Sample)%>%
slice(1)%>% # Fix the 5 errors and turn off the group by and the slice
glimpse()
sum.pot<-full_join(legal.sum,location)%>%
complete(sizeclass,nesting(Sample))%>%
select(sizeclass,Sample,Count)%>%
left_join(.,dat.location)%>%
replace_na(list(Count=0))%>%
arrange(Sample)%>%
glimpse()
length(unique(sum.per.pot$Sample))
1433*3
#Okay I give up on the legal/sublegal/all above----
#New bit, sum per pot all
all <- dplyr::full_join(dat.length, dat.pot)%>%
filter(!is.na(Location))%>% #Removes the pwo/rivermouth data from the length data.
dplyr::mutate(Date=lubridate::as_date(ymd(Date)))%>%
mutate(month=format(as.Date(Date, 'd%%m%Y'), '%m'))%>%
glimpse()
#check
unique(all$month)
length(unique(all$Sample)) #1857
#sum per pot (Sample)
sum.all<- all%>%
group_by(Sample)%>%
dplyr::summarise(Count=sum(Count))%>%
ungroup()%>%
glimpse()
#sum per pot
sum.pot<-all%>%
select(Date, month,Sample, Location, Site, Longitude, Latitude)%>%
distinct()%>%
left_join(sum.all)%>%
replace_na(list(Count=0))%>%
filter(!Count==0)%>%
glimpse()
#Find the mean per trip/location
# sum.loc<-sum.pot%>%
#   group_by(month, Location)%>%
#   dplyr::summarise(Count=mean(Count))%>%
#   ungroup()%>%
#   filter(!Count==0)%>%
#   #dplyr::mutate(month=str_replace_all(.$month,c("05"="May", "06"="June", "07"="July", "08"="August", "09"="September","11"= "November", "12"= "December")))%>%
#   glimpse()
#Plot mean catch per pot----
# Theme-----
Theme1 <-
theme( # use theme_get() to see available options
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#legend.position = "none",
text=element_text(size=12),
strip.text.y = element_text(size = 12,angle = 0),
axis.title.x=element_text(vjust=0.3, size=12, face = "bold"),
axis.title.y=element_text(vjust=0.6, angle=90, size=12, face = "bold"),
axis.text.x=element_text(size=12,angle = 0, colour = "black"), #, hjust=1,vjust=0.5
axis.text.y=element_text(size=12,colour = "black"),
axis.line.x=element_line(colour="black", size=0.5,linetype='solid'),
axis.line.y=element_line(colour="black", size=0.5,linetype='solid'),
strip.text = element_text(size=14, face="bold"),
strip.background = element_blank())
#Plot All----
plot.dat<-sum.pot%>%
filter(!Location%in%c("Golden Ridge", "Seven Mile"))%>%
glimpse()
mean.plot<- ggplot(plot.dat, aes(x=month, y=Count, group=Location, color=Location)) +
stat_summary(fun.y=mean, geom="line", size=1) +
stat_summary(fun.ymin = se.min, fun.ymax = se.max, geom = "errorbar", width = 0.1)+
theme_bw()+Theme1+
xlab("Month")+
ylab("Average Lobster per pot (+/- SE)")+
scale_x_discrete(breaks=c("05","06","07", "08", "09", "11", "12"),
labels=c("May", "June", "July", "Aug", "Sept", "Nov", "Dec"))
mean.plot
setwd(plots.di)
ggsave(mean.plot,file="mean.plot.png", width = 20, height = 12,units = "cm")
#Divide into Legal and Sublegal----
#Create sizeclass
legal<-all%>%
mutate(sizeclass= ifelse(Carapace.length>=76.0,"Legal", "Sublegal"))%>%
filter(!is.na(Carapace.length))%>%
glimpse()
#find sum per sizeclass----
sum.legal <-legal%>%
group_by(Sample, sizeclass)%>%
dplyr::summarise(Count=sum(Count))%>%
ungroup()%>%
distinct()%>%
glimpse()
#find sum per pot----
sum.all <-all%>%
group_by(Sample)%>%
dplyr::summarise(Count=sum(Count))%>%
ungroup()%>%
mutate(sizeclass="All")%>%
distinct()%>%
bind_rows(.,sum.legal)%>%
arrange(Sample)%>%
glimpse()
dat.location <- all%>%
select(Date, Sample, Location, Site, Longitude, Latitude)%>%
distinct()%>%
group_by(Sample)%>%
slice(1)%>% # Fix the 5 errors and turn off the group by and the slice
glimpse()
#JOIN BACK WITH DATA: Trap.Id, Sum per pot, Location, Site----
sum.per.pot<-full_join(sum.all,dat.location)%>%
complete(sizeclass,nesting(Sample))%>%
select(sizeclass,Sample,Count)%>%
left_join(.,dat.location)%>%
replace_na(list(Count=0))%>%
arrange(Sample)%>%
mutate(month=format(as.Date(Date, 'd%%m%Y'), '%m'))%>%
glimpse()
glimpse(sum.per.pot)
sum.plot<-sum.per.pot%>%
filter(!sizeclass=="All")%>%
filter(!Count==0)%>%
glimpse()
#Plot legal and sublegal----
legal.plot<- ggplot(sum.plot, aes(x=month, y=Count, group=Location, color=Location)) +
stat_summary(fun.y=mean, geom="line") +
stat_summary(fun.ymin = se.min, fun.ymax = se.max, geom = "errorbar", width = 0.1)+
theme_bw()+Theme1+
xlab("Month")+
ylab("Average Lobster per pot (+/- SE)")+
scale_x_discrete(breaks=c("05","06","07", "08", "09", "11", "12"),
labels=c("May", "June", "July", "Aug", "Sept", "Nov", "Dec"))+
facet_wrap(.~sizeclass)
legal.plot
work.dir=("C:/GitHub/Analysis_Miller_lobster")
## Sub directories ----
data.dir<-paste(work.dir,"Data",sep="/")
map.dir<-paste(work.dir,"Map Layers",sep="/")
plots.dir<-paste(work.dir,"Plots",sep="/")
# Functions----
se <- function(x) sd(x) / sqrt(length(x))
se.min <- function(x) (mean(x)) - se(x)
se.max <- function(x) (mean(x)) + se(x)
sd.min <- function(x) (mean(x)) - sd(x)
sd.max <- function(x) (mean(x)) + sd(x)
scaleFUN <- function(x) sprintf("%.0f", x)
dat.length<-read.csv("length.csv")%>%
filter(!Source%in%c("fisheries-returns", "fisher-returns"))%>% #I want these removed
select(Sample, Tag.number, Carapace.length, Sex, Colour, Count)%>% #To simplify for Ash, Brooke can remove
replace_na(list(Count=1))%>% #Seven Mile North count as NA
glimpse()
#Check
length(unique(dat.length$Tag.number)) #9687
length(dat.length$Carapace.length) #14254
#Import Pot data----
dat.pot<-read.csv("metadata.csv")%>%
filter(!Location=="Rivermouth")%>% #Removes NAs from Fishers as well. good.
dplyr::filter(!Pwo%in%c("1", "2", "X"))%>% #Removed 148 pots with Occy's.
select(Date, Location, Site,Day.pull, Sample, Longitude, Latitude )%>%
glimpse()
#Check
unique(dat.pot$Pwo)
unique(dat.pot$Location)
unique(dat.pot$Source)
#Join Length and Pot data----
glimpse(dat.length) #14,254
glimpse(dat.pot) #1,857
length(unique(dat.pot$Sample)) #1857
length(unique(dat.length$Sample)) #1557
#This does keep empty pots
dat.all <- dplyr::full_join(dat.length, dat.pot)%>%
filter(!is.na(Location))%>% #Removes the pwo/rivermouth data from the length data.
glimpse()
length(unique(dat.all$Sample)) #1857, same. good.
dat.legal <-dat.all%>%
mutate(sizeclass= ifelse(Carapace.length>=76.0,"Legal", "Sublegal"))%>%
filter(!is.na(Carapace.length))%>%
glimpse()
sum.legal <-dat.legal%>%
group_by(Sample, sizeclass)%>%
dplyr::summarise(Count=sum(Count))%>%
ungroup()%>%
distinct()%>%
glimpse()
#FIND SUM PER POT----
sum.dat <-dat.all%>%
group_by(Sample)%>%
dplyr::summarise(Count=sum(Count))%>%
ungroup()%>%
mutate(sizeclass="All")%>%
distinct()%>%
bind_rows(.,sum.legal)%>%
arrange(Sample)%>%
glimpse()
dat.location <- dat.all%>%
select(Date, Sample, Location, Site, Longitude, Latitude)%>%
distinct()%>%
group_by(Sample)%>%
slice(1)%>% # Fix the 5 errors and turn off the group by and the slice
glimpse()
test<-dat.location%>%
group_by(Sample)%>%
dplyr::summarise(n=n())%>%
glimpse()
length(unique(dat.location$Sample)) #1857
#JOIN BACK WITH DATA: Trap.Id, Sum per pot, Location, Site----
test.dat<-sum.dat%>%distinct(Sample)
sum.per.pot<-full_join(sum.dat,dat.location)%>%
tidyr::complete(sizeclass,nesting(Sample))%>%
select(sizeclass,Sample,Count)%>%
left_join(.,dat.location)%>%
replace_na(list(Count=0))%>%
arrange(Sample)%>%
glimpse()
length(unique(sum.per.pot$Sample))
1857*3
5571
setwd(data.dir)
write.csv(sum.per.pot,"dat.catch.csv", row.names=F)
#Find mean catch per pot per date per location----
glimpse(dat.pot)
glimpse(dat.length)
dat <- dplyr::full_join(dat.length, dat.pot)%>%
filter(!is.na(Location))%>% #Removes the pwo/rivermouth data from the length data. 587 removed
glimpse()
legal.sum<- dat%>%
mutate(sizeclass= ifelse(Carapace.length>=76.0,"Legal", "Sublegal"))%>%
filter(!is.na(Carapace.length))%>%
group_by(Sample, sizeclass)%>%
dplyr::summarise(Count=sum(Count))%>%
ungroup()%>%
distinct()%>%
glimpse()
all.sum <-dat%>%
group_by(Sample)%>%
dplyr::summarise(Count=sum(Count))%>%
ungroup()%>%
mutate(sizeclass="All")%>%
distinct()%>%
bind_rows(.,legal.sum)%>%
arrange(Sample)%>%
glimpse()
location <- dat%>%
select(Date, Sample, Location, Site, Longitude, Latitude)%>%
distinct()%>%
group_by(Sample)%>%
slice(1)%>% # Fix the 5 errors and turn off the group by and the slice
glimpse()
sum.pot<-full_join(legal.sum,location)%>%
complete(sizeclass,nesting(Sample))%>%
select(sizeclass,Sample,Count)%>%
left_join(.,dat.location)%>%
replace_na(list(Count=0))%>%
arrange(Sample)%>%
glimpse()
length(unique(sum.per.pot$Sample))
1433*3
all <- dplyr::full_join(dat.length, dat.pot)%>%
filter(!is.na(Location))%>% #Removes the pwo/rivermouth data from the length data.
dplyr::mutate(Date=lubridate::as_date(ymd(Date)))%>%
mutate(month=format(as.Date(Date, 'd%%m%Y'), '%m'))%>%
glimpse()
#check
unique(all$month)
length(unique(all$Sample)) #1857
#sum per pot (Sample)
sum.all<- all%>%
group_by(Sample)%>%
dplyr::summarise(Count=sum(Count))%>%
ungroup()%>%
glimpse()
#sum per pot
sum.pot<-all%>%
select(Date, month,Sample, Location, Site, Longitude, Latitude)%>%
distinct()%>%
left_join(sum.all)%>%
replace_na(list(Count=0))%>%
filter(!Count==0)%>%
glimpse()
#Plot mean catch per pot----
# Theme-----
Theme1 <-
theme( # use theme_get() to see available options
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#legend.position = "none",
text=element_text(size=12),
strip.text.y = element_text(size = 12,angle = 0),
axis.title.x=element_text(vjust=0.3, size=12, face = "bold"),
axis.title.y=element_text(vjust=0.6, angle=90, size=12, face = "bold"),
axis.text.x=element_text(size=12,angle = 0, colour = "black"), #, hjust=1,vjust=0.5
axis.text.y=element_text(size=12,colour = "black"),
axis.line.x=element_line(colour="black", size=0.5,linetype='solid'),
axis.line.y=element_line(colour="black", size=0.5,linetype='solid'),
strip.text = element_text(size=14, face="bold"),
strip.background = element_blank())
#Plot All----
plot.dat<-sum.pot%>%
filter(!Location%in%c("Golden Ridge", "Seven Mile"))%>%
glimpse()
mean.plot<- ggplot(plot.dat, aes(x=month, y=Count, group=Location, color=Location)) +
stat_summary(fun.y=mean, geom="line", size=1) +
stat_summary(fun.ymin = se.min, fun.ymax = se.max, geom = "errorbar", width = 0.1)+
theme_bw()+Theme1+
xlab("Month")+
ylab("Average Lobster per pot (+/- SE)")+
scale_x_discrete(breaks=c("05","06","07", "08", "09", "11", "12"),
labels=c("May", "June", "July", "Aug", "Sept", "Nov", "Dec"))
mean.plot
setwd(plots.di)
ggsave(mean.plot,file="mean.plot.png", width = 20, height = 12,units = "cm")
#Create sizeclass
legal<-all%>%
mutate(sizeclass= ifelse(Carapace.length>=76.0,"Legal", "Sublegal"))%>%
filter(!is.na(Carapace.length))%>%
glimpse()
#find sum per sizeclass----
sum.legal <-legal%>%
group_by(Sample, sizeclass)%>%
dplyr::summarise(Count=sum(Count))%>%
ungroup()%>%
distinct()%>%
glimpse()
#find sum per pot----
sum.all <-all%>%
group_by(Sample)%>%
dplyr::summarise(Count=sum(Count))%>%
ungroup()%>%
mutate(sizeclass="All")%>%
distinct()%>%
bind_rows(.,sum.legal)%>%
arrange(Sample)%>%
glimpse()
dat.location <- all%>%
select(Date, Sample, Location, Site, Longitude, Latitude)%>%
distinct()%>%
group_by(Sample)%>%
slice(1)%>% # Fix the 5 errors and turn off the group by and the slice
glimpse()
#JOIN BACK WITH DATA: Trap.Id, Sum per pot, Location, Site----
sum.per.pot<-full_join(sum.all,dat.location)%>%
complete(sizeclass,nesting(Sample))%>%
select(sizeclass,Sample,Count)%>%
left_join(.,dat.location)%>%
replace_na(list(Count=0))%>%
arrange(Sample)%>%
mutate(month=format(as.Date(Date, 'd%%m%Y'), '%m'))%>%
glimpse()
glimpse(sum.per.pot)
sum.plot<-sum.per.pot%>%
filter(!sizeclass=="All")%>%
filter(!Count==0)%>%
glimpse()
#Plot legal and sublegal----
legal.plot<- ggplot(sum.plot, aes(x=month, y=Count, group=Location, color=Location)) +
stat_summary(fun.y=mean, geom="line") +
stat_summary(fun.ymin = se.min, fun.ymax = se.max, geom = "errorbar", width = 0.1)+
theme_bw()+Theme1+
xlab("Month")+
ylab("Average Lobster per pot (+/- SE)")+
scale_x_discrete(breaks=c("05","06","07", "08", "09", "11", "12"),
labels=c("May", "June", "July", "Aug", "Sept", "Nov", "Dec"))+
facet_wrap(.~sizeclass)
legal.plot
rm(list=ls()) # Clears memory
# Part 3 - plots of the most parsimonious models----
### now  make a nice plot of the most interesting models-----
library(gridExtra)
library(ggplot2)
library(grid)
detach("package:plyr", unload=TRUE)#will error - don't worry
library(tidyr)
library(dplyr)
options(dplyr.width = Inf) #enables head() to display all coloums
library(mgcv)
# Plotting Theme-
Theme1 <-
theme( # use theme_get() to see available options
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# legend.background = element_rect(fill="white"),
legend.background = element_blank(),
legend.key = element_blank(), # switch off the rectangle around symbols in the legend
legend.text = element_text(size=15),
legend.title = element_blank(),
legend.position = c(0.2, 0.8),
text=element_text(size=15),
strip.text.y = element_text(size = 15,angle = 0, colour="black"),
axis.title.x=element_text(vjust=0, size=15, colour="black",face="bold"),
axis.title.y=element_text(vjust=0.6, angle=90, size=15,,face="bold", colour="black"),
axis.text.x=element_text(size=15, colour="black"),
axis.text.y=element_text(size=15, colour="black"),
axis.line.x=element_line(colour="black", size=0.5,linetype='solid'),
axis.line.y=element_line(colour="black", size=0.5,linetype='solid'),
strip.background = element_blank())
# Bring in and format the raw data----
# Set work directory----
work.dir=("Z://Analysis_Miller_lobster") #for laptop
## Sub directories ----
data.dir<-paste(work.dir,"Data",sep="/")
map.dir<-paste(work.dir,"Map Layers",sep="/")
plots.dir<-paste(work.dir,"Plots",sep="/")
model.dir<-paste(work.dir,"Model_out_catch",sep="/")
# Bring in and format the data----
name<-"catch"
setwd(data.dir)
dir()
dat <-read_csv("catch.sw.sst.csv")%>%
dplyr::rename(response=Count,
Taxa=sizeclass)%>%
# #   Transform variables
mutate(Date=as.factor(yday(Date)))%>% #as julian day
# mutate(recap.Date=as.factor(yday(recap.Date)))%>% #as julian day
mutate(Site=as.factor(Site))%>%
mutate(Location=as.factor(Location))%>%
# mutate(Taxa="catch")%>%
# na.omit()%>%
glimpse()
names(dat)
# Model for legal----
#Height sst Period - updated model
#OR Location + sst- if period is removed
use.dat<-dat%>%
filter(Taxa=="Legal")%>%
glimpse()
mod=gam(response~s(sst,k=3,bs='cr')+Location+s(Site,bs='re')+s(Date,bs='re'),family=tw(),data=use.dat) #  +s(T1.s.sw,k=3,bs='cr')
summary(mod)
gam.check(mod)
# Legal_predict - Location------
testdata <- expand.grid(sst=mean(mod$model$sst),
#T1.s.sw=mean(mod$model$T1.s.sw), AM
Date=(mod$model$Date),
Site=(mod$model$Site),
Location = c("Golden Ridge","Cliff Head","Little Horseshoe","White Point", "Irwin Reef","Seven Mile"))%>%
distinct()%>%
glimpse()
fits <- predict.gam(mod, newdata=testdata, type='response', se.fit=T)
#head(fits,2)
predicts.catch.legal = testdata%>%data.frame(fits)%>%
group_by(Location)%>% #only change here
summarise(response=mean(fit),se.fit=mean(se.fit))%>%
ungroup()%>%
glimpse()
# Plot legal catch - location ----
dev.off() #To fix error-AM
catch.legal.location<- ggplot(aes(x=Location,y=response,
),
data=predicts.catch.legal) +
ylab(bquote('Lobster (' *pot^-1*')'))+
xlab('Location')+
geom_bar(stat = "identity", fill="grey",colour="black")+
geom_errorbar(aes(ymin = 0,ymax = response+se.fit),width = 0.5) +
#theme_classic()+
theme_bw()+
Theme1+
theme(legend.position = "none")+
# scale_y_continuous(breaks=seq(0,12,2))+
#ylim(0,40)+ #,8
ggtitle("Legal")
catch.legal.location
setwd("C:/GitHub/Analysis_Miller_lobster")
## Sub directories ----
data.dir<-paste(work.dir,"Data",sep="/")
map.dir<-paste(work.dir,"Map Layers",sep="/")
plots.dir<-paste(work.dir,"Plots",sep="/")
model.dir<-paste(work.dir,"Model_out_catch",sep="/")
# Bring in and format the data----
name<-"catch"
setwd(data.dir)
dir()
dat <-read_csv("catch.sw.sst.csv")%>%
dplyr::rename(response=Count,
Taxa=sizeclass)%>%
# #   Transform variables
mutate(Date=as.factor(yday(Date)))%>% #as julian day
# mutate(recap.Date=as.factor(yday(recap.Date)))%>% #as julian day
mutate(Site=as.factor(Site))%>%
mutate(Location=as.factor(Location))%>%
# mutate(Taxa="catch")%>%
# na.omit()%>%
glimpse()
names(dat)
