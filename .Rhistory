dplyr::mutate(Colour="Unknown")%>%
dplyr::mutate(Source= "fisheries-returns")%>%
dplyr::mutate(Sex=str_replace_all(.$Sex, c("M"="Male", "F"="Female")))%>%
dplyr::rename(Tag.number=SpeciesTag, Carapace.length=SpeciesSize, Date=ReportCreatedDate, Fisher=ReportersUserName)%>%
dplyr::mutate(Setose.state=str_replace_all(.$SpeciesName,c("Western rock lobster - "="","male"="","Western rock lobster"="","Western rock lobster- "="","- "="","setose no tarspot"="Mature","setose with tarspot"="Mature","non setose"="Immature")))%>%
dplyr::mutate(Tarspot=ifelse(SpeciesName%in%c("Western rock lobster - setose with tarspot"),TRUE,NA))%>%
dplyr::mutate(Retention.Status=ifelse(RetentionStatus%in%c("KEPT","kept"),"Retained",RetentionStatus))%>%
replace_na(list(Sex="Unknown"))%>%
dplyr::mutate(Dead=ifelse(Comments%in%c("Eaten by octopus"),"Dead",NA))%>%
dplyr::rename(Individual.Remarks=Comments,Fisher.Email=ReportersUserEmail,Depth.fms=depth.fms)%>%
dplyr::select(-c(ReportId,SpeciesName,SpeciesCategory,ReportersPhoneNumber,ReportersBoatRegistrationNumber,address,X19,X20,X21,X22,RetentionStatus))%>%
dplyr::mutate(Date=lubridate::as_date(mdy(Date)))%>%
glimpse()
# Change format of Longitude and Latitude
dm <- fisheries.returns%>%
filter(PositionFormat%in%c("Decimal Minutes"))%>%
dplyr::mutate(Latitude=measurements::conv_unit(.$Latitude, from = 'deg_dec_min', to = 'dec_deg'))%>%
dplyr::mutate(Longitude=measurements::conv_unit(.$Longitude, from = 'deg_dec_min', to = 'dec_deg'))%>%
glimpse()
dd <- fisheries.returns%>%
filter(PositionFormat%in%c("Decimal Degrees"))%>%
glimpse()
fisheries.returns <- bind_rows(dd, dm)%>%
dplyr::mutate(Latitude=as.numeric(Latitude))%>%
dplyr::mutate(Longitude=as.numeric(Longitude))%>%
dplyr::mutate(row=1:nrow(.))%>%
dplyr::mutate(Sample=paste(row,Tag.number,sep="."))%>%
glimpse()
names(fisheries.returns)
metadata.fisheries<-fisheries.returns%>%
dplyr::select(Source,Sample,Latitude,Longitude,Fisher,Fisher.Email,Date,Depth.fms,Exclude.Pots,Pot.Remarks)
length.fisheries<-fisheries.returns%>%
dplyr::mutate(Recapture=as.character(Recapture))%>%
dplyr::select(Source,Sample,Tag.number,Sex,Colour,Carapace.length,Recapture,Setose.state,Tarspot,Individual.Remarks,Retention.Status,Dead)
#Import Tag Return data sent to UWA----
fisher.returns <- gs_title("UWA.Tag.Returns")%>%
gs_read_csv(ws="Sheet1")%>%
dplyr::mutate(Recapture=TRUE)%>%
dplyr::mutate(Source = "fisher-returns")%>%
dplyr::mutate(Sex=str_replace_all(.$Sex, c("M"="Male", "F"="Female","U"="Unknown")))%>%
dplyr::mutate(Colour=str_replace_all(.$Colour, c("W"="White", "R"="Red")))%>%
dplyr::rename(Fisher= Reporter, Latitude=`Latitude(deg_dec_min)`, Longitude=`Longitude(deg_dec_min)`,Setose.state=Setose,Fisher.Email=Email,Pot.Remarks=Comments,Retention.Status=RetentionStatus)%>%
dplyr::mutate(Date=as_date(dmy(Date)))%>%
dplyr::mutate(Latitude=measurements::conv_unit(.$Latitude, from = 'deg_dec_min', to = 'dec_deg'))%>%
dplyr::mutate(Longitude=measurements::conv_unit(.$Longitude, from = 'deg_dec_min', to = 'dec_deg'))%>%
dplyr::mutate(Latitude=as.numeric(Latitude))%>%
dplyr::mutate(Longitude=as.numeric(Longitude))%>%
dplyr::mutate(row=1:nrow(.))%>%
dplyr::mutate(Sample=paste(row,Tag.number,sep="."))%>%
dplyr::mutate(Retention.Status=str_replace_all(.$Retention.Status, c("Returned"="Released")))%>%
glimpse()
names(fisher.returns)
metadata.fisher<-fisher.returns%>%
dplyr::select(Source,Sample,Date,Latitude,Longitude,Fisher,Fisher.Email,Pot.Remarks)
length.fisher<-fisher.returns%>%
dplyr::mutate(Recapture=as.character(Recapture))%>%
dplyr::select(Source,Sample,Tag.number,Carapace.length,Sex,Colour,Setose.state,Retention.Status,Recapture)
# Clean up enviroment
rm(dd,dm,fisher.returns,fisheries.returns)
# Seven Mile Data ----
sevenmile<-gs_title("Lobster_Data_Fisheries_SMB_All")%>%
gs_read_csv("SMB2",col_types = "cccnnnnnccnnnnnnncccnnnnnnnn")%>%
dplyr::mutate(Source="ben-seven-mile")%>%
dplyr::mutate(Location="Seven Mile")%>%
dplyr::mutate(Site="Seven Mile North")%>%
dplyr::mutate(Trip="10")%>%
dplyr::mutate(Trip=as.numeric(Trip))%>%
dplyr::mutate(Sample=as.character(POT_NO))%>%
dplyr::rename(Tag.number=VTAGNO)%>%
dplyr::mutate(Tag.number=as.character(Tag.number))%>%
dplyr::mutate(Tag.number=str_replace_all(.$Tag.number,c("V"="")))%>% #Removes V
dplyr::filter(m%in%c(5:12))%>% #filter Jan-April
dplyr::mutate(Date=lubridate::ymd(sprintf('%04d%02d%02d',y,m,d)))%>% #Make date col
dplyr::mutate(Outlier=ifelse(Tag.number%in%c("190428","190188","190124","190443"),"y",NA))%>%
dplyr::rename(Recapture= REC, Sex=SEX, Colour=COLOUR, Carapace.length=CLENGTH, Setose.state= SETOSE, Individual.Remarks=REMARKS, Damage.new.a=NEW_ANT, Damage.new.L=NEW_LEGS, Damage.old.a=OLD_ANT, Damage.old.L=OLD_LEGS,Pot.Number=POT_NO, Pot.Type=POT_TYPE_ID, Day.Pull=DAY_PULL)%>%
dplyr::mutate(Damage.old.a=if_else(Damage.new.a==9,0,Damage.old.a))%>% # Fix Damaged data
dplyr::mutate(Damage.new.L=if_else(Damage.new.a==9,0,Damage.new.L))%>%
dplyr::mutate(Damage.old.L=if_else(Damage.new.a==9,0,Damage.old.L))%>%
dplyr::mutate(Damage.new.a=if_else(Damage.new.a==9,0,Damage.new.a))%>%
dplyr::mutate(Colour=str_replace_all(.$Colour,c("W"="White", "R"="Red")))%>%
dplyr::mutate(Sex=str_replace_all(.$Sex, c("M"="Male", "F"="Female","U"="Unknown")))%>%
dplyr::mutate(Sex=if_else((!is.na(Colour)&!Sex%in%c("Female","Male")),"Unknown",Sex))%>%
dplyr::mutate(Recapture=str_replace_all(.$Recapture, c("1"= "TRUE")))%>%
filter(!is.na(Sample))%>%
glimpse()
names(sevenmile)
metadata.sevenmile<-sevenmile%>%
distinct(Source,Trip,Sample,Date,Longitude,Latitude,Location,Site,PWO,WKW,PWF,Pot.Remarks)%>%
dplyr::mutate(PWO=as.character(PWO))
length.sevenmile<-sevenmile%>%
dplyr::select(Source,Trip,Sample,Tag.number,Carapace.length,Sex,Colour,Recapture,Damage.new.a, Damage.new.L, Damage.old.a, Damage.old.L, Outlier)%>%
filter(!is.na(Carapace.length)&!is.na(Sex))%>%
glimpse()
# tidy names to join lenght
names(length)<-ga.capitalise(names(length))
names(length.fisheries)<-ga.capitalise(names(length.fisheries))
names(length.fisher)<-ga.capitalise(names(length.fisher))
names(length.sevenmile)<-ga.capitalise(names(length.sevenmile))
# tidy names to join length
names(metadata)<-ga.capitalise(names(metadata))
names(metadata.fisheries)<-ga.capitalise(names(metadata.fisheries))
names(metadata.fisher)<-ga.capitalise(names(metadata.fisher))
names(metadata.sevenmile)<-ga.capitalise(names(metadata.sevenmile))
# Add data from other sources to UWA data
metadata.final<-bind_rows(metadata,metadata.fisheries,metadata.fisher,metadata.sevenmile)
length.final<-bind_rows(length,length.fisheries,length.fisher,metadata.sevenmile)
# Import Tag Return data sent to Fisheries----
fisheries.returns <- gs_title("Fisheries.Tag.Returns")%>%
gs_read_csv(ws="Sheet1")%>%
dplyr::mutate(Recapture=TRUE)%>%
dplyr::mutate(Colour="Unknown")%>%
dplyr::mutate(Source= "fisheries-returns")%>%
dplyr::mutate(Sex=str_replace_all(.$Sex, c("M"="Male", "F"="Female")))%>%
dplyr::rename(Tag.number=SpeciesTag, Carapace.length=SpeciesSize, Date=ReportCreatedDate, Fisher=ReportersUserName)%>%
dplyr::mutate(Setose.state=str_replace_all(.$SpeciesName,c("Western rock lobster - "="","male"="","Western rock lobster"="","Western rock lobster- "="","- "="","setose no tarspot"="Mature","setose with tarspot"="Mature","non setose"="Immature")))%>%
dplyr::mutate(Tarspot=ifelse(SpeciesName%in%c("Western rock lobster - setose with tarspot"),TRUE,NA))%>%
dplyr::mutate(Retention.Status=ifelse(RetentionStatus%in%c("KEPT","kept"),"Retained",RetentionStatus))%>%
replace_na(list(Sex="Unknown"))%>%
dplyr::mutate(Dead=ifelse(Comments%in%c("Eaten by octopus"),"Dead",NA))%>%
dplyr::rename(Individual.Remarks=Comments,Fisher.Email=ReportersUserEmail,Depth.fms=depth.fms)%>%
dplyr::select(-c(ReportId,SpeciesName,SpeciesCategory,ReportersPhoneNumber,ReportersBoatRegistrationNumber,address,X19,X20,X21,X22,RetentionStatus))%>%
dplyr::mutate(Date=lubridate::as_date(mdy(Date)))%>%
glimpse()
# Change format of Longitude and Latitude
dm <- fisheries.returns%>%
filter(PositionFormat%in%c("Decimal Minutes"))%>%
dplyr::mutate(Latitude=measurements::conv_unit(.$Latitude, from = 'deg_dec_min', to = 'dec_deg'))%>%
dplyr::mutate(Longitude=measurements::conv_unit(.$Longitude, from = 'deg_dec_min', to = 'dec_deg'))%>%
glimpse()
dd <- fisheries.returns%>%
filter(PositionFormat%in%c("Decimal Degrees"))%>%
glimpse()
fisheries.returns <- bind_rows(dd, dm)%>%
dplyr::mutate(Latitude=as.numeric(Latitude))%>%
dplyr::mutate(Longitude=as.numeric(Longitude))%>%
dplyr::mutate(row=1:nrow(.))%>%
dplyr::mutate(Sample=paste(row,Tag.number,sep="."))%>%
glimpse()
names(fisheries.returns)
metadata.fisheries<-fisheries.returns%>%
dplyr::select(Source,Sample,Latitude,Longitude,Fisher,Fisher.Email,Date,Depth.fms,Exclude.Pots,Pot.Remarks)
length.fisheries<-fisheries.returns%>%
dplyr::mutate(Recapture=as.character(Recapture))%>%
dplyr::mutate(Tarspot=as.character(Tarspot))%>%
dplyr::select(Source,Sample,Tag.number,Sex,Colour,Carapace.length,Recapture,Setose.state,Tarspot,Individual.Remarks,Retention.Status,Dead)
# Import Tag Return data sent to UWA----
fisher.returns <- gs_title("UWA.Tag.Returns")%>%
gs_read_csv(ws="Sheet1")%>%
dplyr::mutate(Recapture=TRUE)%>%
dplyr::mutate(Source = "fisher-returns")%>%
dplyr::mutate(Sex=str_replace_all(.$Sex, c("M"="Male", "F"="Female","U"="Unknown")))%>%
dplyr::mutate(Colour=str_replace_all(.$Colour, c("W"="White", "R"="Red")))%>%
dplyr::rename(Fisher= Reporter, Latitude=`Latitude(deg_dec_min)`, Longitude=`Longitude(deg_dec_min)`,Setose.state=Setose,Fisher.Email=Email,Pot.Remarks=Comments,Retention.Status=RetentionStatus)%>%
dplyr::mutate(Date=as_date(dmy(Date)))%>%
dplyr::mutate(Latitude=measurements::conv_unit(.$Latitude, from = 'deg_dec_min', to = 'dec_deg'))%>%
dplyr::mutate(Longitude=measurements::conv_unit(.$Longitude, from = 'deg_dec_min', to = 'dec_deg'))%>%
dplyr::mutate(Latitude=as.numeric(Latitude))%>%
dplyr::mutate(Longitude=as.numeric(Longitude))%>%
dplyr::mutate(row=1:nrow(.))%>%
dplyr::mutate(Sample=paste(row,Tag.number,sep="."))%>%
dplyr::mutate(Retention.Status=str_replace_all(.$Retention.Status, c("Returned"="Released")))%>%
glimpse()
names(fisher.returns)
metadata.fisher<-fisher.returns%>%
dplyr::select(Source,Sample,Date,Latitude,Longitude,Fisher,Fisher.Email,Pot.Remarks)
length.fisher<-fisher.returns%>%
dplyr::mutate(Recapture=as.character(Recapture))%>%
dplyr::select(Source,Sample,Tag.number,Carapace.length,Sex,Colour,Setose.state,Retention.Status,Recapture)
# Clean up enviroment
rm(dd,dm,fisher.returns,fisheries.returns)
# Seven Mile Data ----
sevenmile<-gs_title("Lobster_Data_Fisheries_SMB_All")%>%
gs_read_csv("SMB2",col_types = "cccnnnnnccnnnnnnncccnnnnnnnn")%>%
dplyr::mutate(Source="ben-seven-mile")%>%
dplyr::mutate(Location="Seven Mile")%>%
dplyr::mutate(Site="Seven Mile North")%>%
dplyr::mutate(Trip="10")%>%
dplyr::mutate(Trip=as.numeric(Trip))%>%
dplyr::mutate(Sample=as.character(POT_NO))%>%
dplyr::rename(Tag.number=VTAGNO)%>%
dplyr::mutate(Tag.number=as.character(Tag.number))%>%
dplyr::mutate(Tag.number=str_replace_all(.$Tag.number,c("V"="")))%>% #Removes V
dplyr::filter(m%in%c(5:12))%>% #filter Jan-April
dplyr::mutate(Date=lubridate::ymd(sprintf('%04d%02d%02d',y,m,d)))%>% #Make date col
dplyr::mutate(Outlier=ifelse(Tag.number%in%c("190428","190188","190124","190443"),"y",NA))%>%
dplyr::rename(Recapture= REC, Sex=SEX, Colour=COLOUR, Carapace.length=CLENGTH, Setose.state= SETOSE, Individual.Remarks=REMARKS, Damage.new.a=NEW_ANT, Damage.new.L=NEW_LEGS, Damage.old.a=OLD_ANT, Damage.old.L=OLD_LEGS,Pot.Number=POT_NO, Pot.Type=POT_TYPE_ID, Day.Pull=DAY_PULL)%>%
dplyr::mutate(Damage.old.a=if_else(Damage.new.a==9,0,Damage.old.a))%>% # Fix Damaged data
dplyr::mutate(Damage.new.L=if_else(Damage.new.a==9,0,Damage.new.L))%>%
dplyr::mutate(Damage.old.L=if_else(Damage.new.a==9,0,Damage.old.L))%>%
dplyr::mutate(Damage.new.a=if_else(Damage.new.a==9,0,Damage.new.a))%>%
dplyr::mutate(Colour=str_replace_all(.$Colour,c("W"="White", "R"="Red")))%>%
dplyr::mutate(Sex=str_replace_all(.$Sex, c("M"="Male", "F"="Female","U"="Unknown")))%>%
dplyr::mutate(Sex=if_else((!is.na(Colour)&!Sex%in%c("Female","Male")),"Unknown",Sex))%>%
dplyr::mutate(Recapture=str_replace_all(.$Recapture, c("1"= "TRUE")))%>%
filter(!is.na(Sample))%>%
glimpse()
names(sevenmile)
metadata.sevenmile<-sevenmile%>%
distinct(Source,Trip,Sample,Date,Longitude,Latitude,Location,Site,PWO,WKW,PWF,Pot.Remarks)%>%
dplyr::mutate(PWO=as.character(PWO))
length.sevenmile<-sevenmile%>%
dplyr::select(Source,Trip,Sample,Tag.number,Carapace.length,Sex,Colour,Recapture,Damage.new.a, Damage.new.L, Damage.old.a, Damage.old.L, Outlier)%>%
filter(!is.na(Carapace.length)&!is.na(Sex))%>%
glimpse()
# tidy names to join lenght
names(length)<-ga.capitalise(names(length))
names(length.fisheries)<-ga.capitalise(names(length.fisheries))
names(length.fisher)<-ga.capitalise(names(length.fisher))
names(length.sevenmile)<-ga.capitalise(names(length.sevenmile))
# tidy names to join length
names(metadata)<-ga.capitalise(names(metadata))
names(metadata.fisheries)<-ga.capitalise(names(metadata.fisheries))
names(metadata.fisher)<-ga.capitalise(names(metadata.fisher))
names(metadata.sevenmile)<-ga.capitalise(names(metadata.sevenmile))
# Add data from other sources to UWA data
metadata.final<-bind_rows(metadata,metadata.fisheries,metadata.fisher,metadata.sevenmile)
length.final<-bind_rows(length,length.fisheries,length.fisher,metadata.sevenmile)
## Save metadata, count and length files ----
setwd(data.dir)
write.csv(metadata,"metadata.csv",row.names = FALSE)
## Length files ----
length <-ga.list.files("Length.csv")%>%
purrr::map_df(~ga.read.files_csv(.))%>%
dplyr::mutate(Carapace.length=as.numeric(length))%>%
dplyr::mutate(Trip=as.character(trip))%>%
dplyr::select(-c(length,trip))%>%
glimpse()
length.final<-bind_rows(length,length.fisheries,length.fisher,metadata.sevenmile)
## Length files ----
length <-ga.list.files("Length.csv")%>%
purrr::map_df(~ga.read.files_csv(.))%>%
dplyr::mutate(Carapace.length=as.numeric(length))%>%
dplyr::mutate(Trip=as.numeric(trip))%>%
dplyr::select(-c(length,trip))%>%
glimpse()
length.final<-bind_rows(length,length.fisheries,length.fisher,metadata.sevenmile)
## Save metadata, count and length files ----
setwd(data.dir)
View(length.final)
# tidy names to join lenght
names(length)<-ga.capitalise(names(length))
names(length.fisheries)<-ga.capitalise(names(length.fisheries))
names(length.fisher)<-ga.capitalise(names(length.fisher))
names(length.sevenmile)<-ga.capitalise(names(length.sevenmile))
# tidy names to join length
names(metadata)<-ga.capitalise(names(metadata))
names(metadata.fisheries)<-ga.capitalise(names(metadata.fisheries))
names(metadata.fisher)<-ga.capitalise(names(metadata.fisher))
names(metadata.sevenmile)<-ga.capitalise(names(metadata.sevenmile))
# Add data from other sources to UWA data
metadata.final<-bind_rows(metadata,metadata.fisheries,metadata.fisher,metadata.sevenmile)
length.final<-bind_rows(length,length.fisheries,length.fisher,metadata.sevenmile)
View(metadata.final)
names(metadata.final)
names(length.final)
length.final<-bind_rows(length,length.fisheries,length.fisher,length.sevenmile)
## Length files ----
length <-ga.list.files("Length.csv")%>%
purrr::map_df(~ga.read.files_csv(.))%>%
dplyr::mutate(Carapace.length=as.numeric(length))%>%
dplyr::mutate(Trip=as.numeric(trip))%>%
dplyr::mutate(Damage.new.a=as.numeric(damage.new.a))%>%
dplyr::mutate(Damage.old.a=as.numeric(damage.old.a))%>%
dplyr::mutate(Damage.new.l=as.numeric(damage.new.l))%>%
dplyr::mutate(Damage.old.l=as.numeric(damage.old.l))%>%
dplyr::select(-c(length,trip,damage.new.a,damage.new.l,damage.old.a,damage.old.l))%>%
glimpse()
# tidy names to join lenght
names(length)<-ga.capitalise(names(length))
names(length.fisheries)<-ga.capitalise(names(length.fisheries))
names(length.fisher)<-ga.capitalise(names(length.fisher))
names(length.sevenmile)<-ga.capitalise(names(length.sevenmile))
# tidy names to join length
names(metadata)<-ga.capitalise(names(metadata))
names(metadata.fisheries)<-ga.capitalise(names(metadata.fisheries))
names(metadata.fisher)<-ga.capitalise(names(metadata.fisher))
names(metadata.sevenmile)<-ga.capitalise(names(metadata.sevenmile))
# Add data from other sources to UWA data
metadata.final<-bind_rows(metadata,metadata.fisheries,metadata.fisher,metadata.sevenmile)
length.final<-bind_rows(length,length.fisheries,length.fisher,length.sevenmile)
names(metadata.final)
names(length.final)
## Save metadata, count and length files ----
setwd(data.dir)
write.csv(metadata,"metadata.csv",row.names = FALSE)
write.csv(length,"length.csv",row.names = FALSE)
names(metadata.final)
names(length.final)
# Final check of format before saving ----
unique(length.final$Soure)
# Final check of format before saving ----
unique(length.final$Source)
install.packages(c("ncdf4", "rerddap", "rgeos"))
names(length.final)
# Final check of format before saving ----
unique(length.final$Source)
unique(length.final$Recapture) # OK
unique(length.final$Sex) # OK
unique(length.final$Colour) # OK
unique(length.final$Dead) # OK
length.final<-bind_rows(length,length.fisheries,length.fisher,length.sevenmile)%>%
rerplace_na(list=(Dead="Alive"))
length.final<-bind_rows(length,length.fisheries,length.fisher,length.sevenmile)%>%
replace_na(list=(Dead="Alive"))
unique(length.final$Dead) # OK
length.final<-bind_rows(length,length.fisheries,length.fisher,length.sevenmile)%>%
replace_na(list(Dead="Alive"))
unique(length.final$Dead) # OK
names(length.final)
unique(length.final$Individual.remarks) # OK
names(length.final)
length.final<-bind_rows(length,length.fisheries,length.fisher,length.sevenmile)%>%
replace_na(list(Dead="Alive"))%>%
select(-c(Family,Genus,Species,Project,Campaignid))
names(length.final)
# Final check of length format before saving ----
unique(length.final$Source) # OK
unique(length.final$Recapture) # OK
unique(length.final$Sex) # OK
unique(length.final$Colour) # OK
unique(length.final$Dead) # OK
unique(length.final$Individual.remarks) # OK
unique(length.final$Reproductive.stage)
unique(length.final$Setose.state)
unique(length.final$Egg.stage)
unique(length.final$Moult.stage)
unique(length.final$Cable.tie)
unique(length.final$Outlier)
unique(length.final$Tarspot)
unique(length.final$Reproductive.stage)
# Add data from other sources to UWA data ----
metadata.final<-bind_rows(metadata,metadata.fisheries,metadata.fisher,metadata.sevenmile)
unique(length.final$Cable.tie)
length.final<-bind_rows(length,length.fisheries,length.fisher,length.sevenmile)%>%
replace_na(list(Dead="Alive",Cable.tie=FALSE,))%>%
select(-c(Family,Genus,Species,Project,Campaignid))
length.final<-bind_rows(length,length.fisheries,length.fisher,length.sevenmile)%>%
replace_na(list(Dead="Alive",Cable.tie=FALSE))%>%
select(-c(Family,Genus,Species,Project,Campaignid))
unique(length.final$Cable.tie)
names(metadata.final)
# Final check of metadata format before saving ----
unique(metadata.final$Source)
unique(metadata.final$Status)
# Add data from other sources to UWA data ----
metadata.final<-bind_rows(metadata,metadata.fisheries,metadata.fisher,metadata.sevenmile)%>%
select(-c(Time,Status,Depth,Observer))
names(metadata.final)
# Add data from other sources to UWA data ----
metadata.final<-bind_rows(metadata,metadata.fisheries,metadata.fisher,metadata.sevenmile)%>%
select(-c(Time,Status,Depth,Observer,Depth.echosounder,Distance.from.shore.perpendicular.kilometer,Days.from.new.moon,Slope,Aspect,Rugosity,Curvature,Curv.plan,Curv.profile))
names(metadata.final)
# Add data from other sources to UWA data ----
metadata.final<-bind_rows(metadata,metadata.fisheries,metadata.fisher,metadata.sevenmile)%>%
select(-c(Time,Status,Depth,Observer,Depth.echosounder,Distance.from.shore.perpendicular.kilometer,Days.from.new.moon,Slope,Aspect,Rugosity,Curvature,Curv.plan,Curv.profile,Distance.from.shore.nearestpoint.kilometer))
names(metadata.final)
# Add data from other sources to UWA data ----
metadata.final<-bind_rows(metadata,metadata.fisheries,metadata.fisher,metadata.sevenmile)%>%
select(-c(Time,Status,Depth,Observer,Depth.echosounder,Distance.from.shore.perpendicular.kilometer,Days.from.new.moon,Slope,Aspect,Rugosity,Curvature,Curv.plan,Curv.profile,Distance.from.shore.nearestpoint.kilometer,Sd.10m,Sd.15m,Sd.20m,Sd.25m,Sd.50m,Sd.75m,Sd.100m,Sd.200m,Sd.500m,Sd.1000m,Puerulus.count.1k,Puerulus.count.2k,Puerulus.count.3k,Substrate,Project,Campaignid))
length.final<-bind_rows(length,length.fisheries,length.fisher,length.sevenmile)%>%
replace_na(list(Dead="Alive",Cable.tie=FALSE))%>%
select(-c(Family,Genus,Species,Project,Campaignid))
names(metadata.final)
names(length.final)
unique(metadata.final$Source)
unique(metadata.final$Status)
unique(metadata.final$Source)
unique(metadata.final$Source)
# Final check of length format before saving ----
unique(length.final$Source) # OK
unique(length.final$Recapture) # OK
unique(length.final$Sex) # OK
unique(length.final$Colour) # OK
unique(length.final$Dead) # OK
unique(length.final$Individual.remarks) # OK
unique(length.final$Reproductive.stage) # OK
unique(length.final$Setose.state) # OK
unique(length.final$Egg.stage) # OK
unique(length.final$Moult.stage) # OK
unique(length.final$Cable.tie) # OK
unique(length.final$Outlier) # OK
unique(length.final$Tarspot) # OK
unique(length.final$Reproductive.stage) # OK
## Save metadata, count and length files ----
setwd(data.dir)
write.csv(metadata,"metadata.csv",row.names = FALSE)
write.csv(length,"length.csv",row.names = FALSE)
names(metadata.final)
unique(metadata.final$Location)
unique(metadata.final$Site)
unique(metadata.final$Comment) # OK
# Combine all downloaded data----
## Metadata files ----
metadata <-ga.list.files("Metadata.csv")%>%
purrr::map_df(~ga.read.files_csv(.))%>%
dplyr::mutate(Latitude=as.numeric(latitude))%>%
dplyr::mutate(Longitude=as.numeric(longitude))%>%
dplyr::mutate(Trip=as.numeric(trip))%>%
dplyr::mutate(Date=paste((str_sub(date,1,4)),(str_sub(date,5,6)),(str_sub(date,7,8)),sep="-"))%>%
dplyr::mutate(Date=lubridate::as_date(ymd(Date)))%>%
dplyr::rename(Pot.remarks=comment)%>%
dplyr::select(-c(date,latitude,longitude,trip))%>%
glimpse()
# Add data from other sources to UWA data ----
metadata.final<-bind_rows(metadata,metadata.fisheries,metadata.fisher,metadata.sevenmile)%>%
select(-c(Time,Status,Depth,Observer,Depth.echosounder,Distance.from.shore.perpendicular.kilometer,Days.from.new.moon,Slope,Aspect,Rugosity,Curvature,Curv.plan,Curv.profile,Distance.from.shore.nearestpoint.kilometer,Sd.10m,Sd.15m,Sd.20m,Sd.25m,Sd.50m,Sd.75m,Sd.100m,Sd.200m,Sd.500m,Sd.1000m,Puerulus.count.1k,Puerulus.count.2k,Puerulus.count.3k,Substrate,Project,Campaignid))
# tidy names to join metadata ----
names(metadata)<-ga.capitalise(names(metadata))
names(metadata.fisheries)<-ga.capitalise(names(metadata.fisheries))
names(metadata.fisher)<-ga.capitalise(names(metadata.fisher))
names(metadata.sevenmile)<-ga.capitalise(names(metadata.sevenmile))
# Add data from other sources to UWA data ----
metadata.final<-bind_rows(metadata,metadata.fisheries,metadata.fisher,metadata.sevenmile)%>%
select(-c(Time,Status,Depth,Observer,Depth.echosounder,Distance.from.shore.perpendicular.kilometer,Days.from.new.moon,Slope,Aspect,Rugosity,Curvature,Curv.plan,Curv.profile,Distance.from.shore.nearestpoint.kilometer,Sd.10m,Sd.15m,Sd.20m,Sd.25m,Sd.50m,Sd.75m,Sd.100m,Sd.200m,Sd.500m,Sd.1000m,Puerulus.count.1k,Puerulus.count.2k,Puerulus.count.3k,Substrate,Project,Campaignid))
# Final check of metadata format before saving ----
unique(metadata.final$Source)
unique(metadata.final$Location) # OK
unique(metadata.final$Comment) # OK
unique(metadata.final$Pot.remarks) # OK
names(metadata.final)
unique(metadata.final$Day)
unique(metadata.final$Pwo) # OK
unique(metadata.final$Pwf) # OK
unique(metadata.final$Day) # Trip
unique(metadata.final$Trip) # Trip
names(metadata.final)
unique(metadata.final$Exclude.pots)
## Save metadata, count and length files ----
setwd(data.dir)
write.csv(metadata,"metadata.csv",row.names = FALSE)
write.csv(length,"length.csv",row.names = FALSE)
install.packages("tidyverse")
#library(purrr)
library(tidyverse)
# Set work directory----
# work.dir=("~/GitHub/Analysis_Miller_WRL") #for Tim's github
# work.dir=("~/workspace/Analysis_Miller_WRL") #for ecocloud server
work.dir=("C:/GitHub/Analysis_Miller_lobster") # For Brooke
# Sub directories ----
data.dir<-paste(work.dir,"Data",sep="/")
uploads<-paste(data.dir,"Uploads",sep="/")
# Functions to remove csv unfriendly thingos
remove.commas <- function(c){
( gsub(",", '.', c))
}
remove.colon <- function(c){
( gsub(";", '.', c))
}
remove<-function(c){
( gsub(" ", " ", c))
}
# Import 2018 data----
# Two steps to keep additional info to join back into
dat.2018<-gs_title("Lobsters_data_2018_All")%>%
gs_read_csv(ws = "Lobster.var",col_types = "nccnccccccnccccccnnnncccccc")%>%
mutate(Sample=paste(Trip,Day,Trap.ID,sep="."))%>%  # trip.day.trap is now "Sample"
mutate(Source = 'Dongara.Millers.Masters')%>%
glimpse()
# librarys----
#library(tidyr)
#library(dplyr)
library(googlesheets)
library(stringr)
library(measurements)
library(lubridate)
#library(readr)
library(devtools)
install_github("UWAMEGFisheries/GlobalArchive", dependencies = TRUE) # to check for updates
library(GlobalArchive)
#library(purrr)
library(tidyverse)
# Set work directory----
# work.dir=("~/GitHub/Analysis_Miller_WRL") #for Tim's github
# work.dir=("~/workspace/Analysis_Miller_WRL") #for ecocloud server
work.dir=("C:/GitHub/Analysis_Miller_lobster") # For Brooke
# Sub directories ----
data.dir<-paste(work.dir,"Data",sep="/")
uploads<-paste(data.dir,"Uploads",sep="/")
# Functions to remove csv unfriendly thingos
remove.commas <- function(c){
( gsub(",", '.', c))
}
remove.colon <- function(c){
( gsub(";", '.', c))
}
remove<-function(c){
( gsub(" ", " ", c))
}
# Import 2018 data----
# Two steps to keep additional info to join back into
dat.2018<-gs_title("Lobsters_data_2018_All")%>%
gs_read_csv(ws = "Lobster.var",col_types = "nccnccccccnccccccnnnncccccc")%>%
mutate(Sample=paste(Trip,Day,Trap.ID,sep="."))%>%  # trip.day.trap is now "Sample"
mutate(Source = 'Dongara.Millers.Masters')%>%
glimpse()
length.2018<-dat.2018%>%
filter(!(is.na(Carapace.length)&is.na(Tag.number)&is.na(Colour)))%>%
# now filters out where all are blank (empty pots)
mutate(Colour=str_replace_all(.$Colour,c("W"="White", "R"="Red")))%>%
mutate(Sex=str_replace_all(.$Sex, c("M"="Male", "F"="Female","U"="Unknown")))%>%
mutate(Sex=if_else((!is.na(Colour)&!Sex%in%c("Female","Male")),"Unknown",Sex))%>%
mutate(Damage.old.a=if_else(Damage.new.a==9,0,Damage.old.a))%>% # Fix Damaged data
mutate(Damage.new.L=if_else(Damage.new.a==9,0,Damage.new.L))%>%
mutate(Damage.old.L=if_else(Damage.new.a==9,0,Damage.old.L))%>%
mutate(Damage.new.a=if_else(Damage.new.a==9,0,Damage.new.a))%>%
mutate(Setose.state=ifelse(Setose.state%in%c("I"),NA,Setose.state))%>%
mutate(Setose.state=ifelse(Setose.state%in%c("E"),"Immature",Setose.state))%>%
mutate(Setose.state=ifelse(Setose.state%in%c("M"),"Mature",Setose.state))%>%
mutate(Egg.stage=ifelse(Egg.stage%in%c("E","I"),"Early",Egg.stage))%>%
mutate(Egg.stage=ifelse(Egg.stage%in%c("M"),"Mid",Egg.stage))%>%
dplyr::select(Source,Trip,Sample,Tag.number,Recapture,Carapace.length,Sex,Colour,Setose.state,Egg.stage,Moult.stage,Damage.old.a,Damage.old.L,Damage.new.a,Damage.new.L,Dead,Outlier,Individual.Remarks)%>%
glimpse()
