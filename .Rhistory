xlab("Month")+
ylab("Average Lobster per pot (+/- SE)")+
scale_x_discrete(breaks=c("05","06","07", "08", "09", "11", "12"),
labels=c("May", "June", "July", "Aug", "Sept", "Nov", "Dec"))
mean.plot
mean.plot<- ggplot(plot.dat, aes(x=month, y=Count, group=Location, color=Location)) +
stat_summary(fun.y=mean, geom="line", size=1) +
stat_summary(fun.ymin = se.min, fun.ymax = se.max, geom = "errorbar", width = 0.1)+
scale_color_manual(values = c("#E7B800","red", "#00AFBB"))+
scale_fill_discrete(labels = c("Mid", "Boundary", "Low-catch"))+
theme_bw()+Theme1+
xlab("Month")+
ylab("Average Lobster per pot (+/- SE)")+
scale_x_discrete(breaks=c("05","06","07", "08", "09", "11", "12"),
labels=c("May", "June", "July", "Aug", "Sept", "Nov", "Dec"))
mean.plot
mean.plot<- ggplot(plot.dat, aes(x=month, y=Count, group=Location, color=Location)) +
stat_summary(fun.y=mean, geom="line", size=1) +
stat_summary(fun.ymin = se.min, fun.ymax = se.max, geom = "errorbar", width = 0.1)+
scale_color_manual(values = c("#E7B800","red", "#00AFBB"))+
scale_fill_discrete(name = "Location", labels = c("Mid", "Boundary", "Low-catch"))+
theme_bw()+Theme1+
xlab("Month")+
ylab("Average Lobster per pot (+/- SE)")+
scale_x_discrete(breaks=c("05","06","07", "08", "09", "11", "12"),
labels=c("May", "June", "July", "Aug", "Sept", "Nov", "Dec"))
mean.plot
mean.plot<- ggplot(plot.dat, aes(x=month, y=Count, group=Location, color=Location)) +
stat_summary(fun.y=mean, geom="line", size=1) +
stat_summary(fun.ymin = se.min, fun.ymax = se.max, geom = "errorbar", width = 0.1)+
scale_color_manual(values = c("#E7B800","red", "#00AFBB"))+
theme_bw()+Theme1+
xlab("Month")+
ylab("Average Lobster per pot (+/- SE)")+
scale_x_discrete(breaks=c("05","06","07", "08", "09", "11", "12"),
labels=c("May", "June", "July", "Aug", "Sept", "Nov", "Dec"))+
scale_fill_discrete(name = "Location", labels = c("Mid", "Boundary", "Low-catch"))
mean.plot
unique(plot.dat$Location)
plot.dat %>%
#arrange(size_num) %>% # sort
mutate_at(vars(Location), funs(factor(., levels=unique("Mid", "Boundary", "Low-catch")))) %>%
glimpse()
unique(plot.dat$Location)
mean.plot<- ggplot(plot.dat, aes(x=month, y=Count, group=Location, color=Location)) +
stat_summary(fun.y=mean, geom="line", size=1) +
stat_summary(fun.ymin = se.min, fun.ymax = se.max, geom = "errorbar", width = 0.1)+
scale_color_manual(values = c("#E7B800","red", "#00AFBB"))+
theme_bw()+Theme1+
xlab("Month")+
ylab("Average Lobster per pot (+/- SE)")+
scale_x_discrete(breaks=c("05","06","07", "08", "09", "11", "12"),
labels=c("May", "June", "July", "Aug", "Sept", "Nov", "Dec"))
mean.plot
plot.dat$Location<- as.factor(Location, c("Mid", "Boundary", "Low-catch"))
plot.dat$Location<- as.factor(Location, levels=c("Mid", "Boundary", "Low-catch"))
View(plot.dat)
plot.dat$Location<- factor(plot.dat$Location, levels=c("Mid", "Boundary", "Low-catch"))
mean.plot<- ggplot(plot.dat, aes(x=month, y=Count, group=Location, color=Location)) +
stat_summary(fun.y=mean, geom="line", size=1) +
stat_summary(fun.ymin = se.min, fun.ymax = se.max, geom = "errorbar", width = 0.1)+
scale_color_manual(values = c("#E7B800","red", "#00AFBB"))+
theme_bw()+Theme1+
xlab("Month")+
ylab("Average Lobster per pot (+/- SE)")+
scale_x_discrete(breaks=c("05","06","07", "08", "09", "11", "12"),
labels=c("May", "June", "July", "Aug", "Sept", "Nov", "Dec"))
mean.plot
mean.plot<- ggplot(plot.dat, aes(x=month, y=Count, group=Location, color=Location)) +
stat_summary(fun.y=mean, geom="line", size=1) +
stat_summary(fun.ymin = se.min, fun.ymax = se.max, geom = "errorbar", width = 0.1)+
scale_color_manual(values = c("#00AFBB","#E7B800","red"))+
theme_bw()+Theme1+
xlab("Month")+
ylab("Average Lobster per pot (+/- SE)")+
scale_x_discrete(breaks=c("05","06","07", "08", "09", "11", "12"),
labels=c("May", "June", "July", "Aug", "Sept", "Nov", "Dec"))
mean.plot
setwd(plots.di)
ggsave(mean.plot,file="mean.plot.250619.png", width = 20, height = 12,units = "cm")
setwd(plots.dir)
ggsave(mean.plot,file="mean.plot.250619.png", width = 20, height = 12,units = "cm")
# Explore catch data ----
rm(list=ls()) #clear memory
# librarys ----
library(tidyr)
library(dplyr)
library(googlesheets)
library(stringr)
library(ggplot2)
library(magrittr)
library(readr)
# Study name ----
study<-"Recapture.Distance"
# Set work directory ----
work.dir=("Z://Analysis_Miller_lobster") #for laptop
# Set sub-directories ----
data.dir=paste(work.dir,"Data",sep="/")
plot.dir=paste(work.dir,"Plots",sep="/")
#Import recapture data (created in '02.Recapture.Data.190515.R' script)
dat.rr<- read.csv("Recapture.Data.csv")%>%
glimpse()
dist.1<-dat.rr%>%
select( Longitude, Latitude)%>% #Tag.number, Location.int,
glimpse()
#Import recapture data (created in '02.Recapture.Data.190515.R' script)
dat.rr<- read.csv("Recapture.Data.csv")%>%
glimpse()
setwd("Z:/Analysis_Miller_lobster/Data")
#Import recapture data (created in '02.Recapture.Data.190515.R' script)
dat.rr<- read.csv("Recapture.Data.csv")%>%
glimpse()
dist.1<-dat.rr%>%
select( Longitude, Latitude)%>% #Tag.number, Location.int,
glimpse()
dist.2<-dat.rr%>%
select(Longitude.recap, Latitude.recap)%>% #Tag.number, Location.int,
glimpse()
# create distance matrix----
mat <- distGeo(dist.1,dist.2)
dat.rr$distance <- mat/1000 #Add coloum of distance (km)
library(geosphere)
# Study name ----
study<-"Recapture.Distance"
# Set work directory ----
work.dir=("Z://Analysis_Miller_lobster") #for laptop
# Set sub-directories ----
data.dir=paste(work.dir,"Data",sep="/")
plot.dir=paste(work.dir,"Plots",sep="/")
#Import recapture data (created in '02.Recapture.Data.190515.R' script)
dat.rr<- read.csv("Recapture.Data.csv")%>%
glimpse()
dist.1<-dat.rr%>%
select( Longitude, Latitude)%>% #Tag.number, Location.int,
glimpse()
dist.2<-dat.rr%>%
select(Longitude.recap, Latitude.recap)%>% #Tag.number, Location.int,
glimpse()
# create distance matrix----
mat <- distGeo(dist.1,dist.2)
dat.rr$distance <- mat/1000 #Add coloum of distance (km)
glimpse(dat.rr)
#Add Bearing----
dat.rr$bearing<-bearingRhumb(dist.1, dist.2)
glimpse(dat.rr)
#Allocate size class for recaptures-Ones that changes sublegal->legal can fall into the Legal category
dat.movement<-dat.rr%>%
mutate(sizeclass= ifelse(Carapace.length.recap>=76.0,"Legal", "Sublegal"))%>%
glimpse()
test<-dat.movement%>%
filter(sizeclass=="Sublegal")%>%
glimpse()
View(dat.movement)
View(dat.movement)
View(test)
View(test)
View(test)
View(test)
# Explore catch data----
rm(list=ls()) # Clears memory
# Explore length data----
rm(list=ls()) # Clears memory
# librarys----
library(tidyr)
library(dplyr)
library(googlesheets)
library(stringr)
library(lubridate)
library(tidyverse)
# Study name----
study<-"Lobster.Data"
# Set work directory----
work.dir=("Z:/Analysis_Miller_lobster") # FOr Ash's laptop using Git
## Sub directories ----
data.dir<-paste(work.dir,"Data",sep="/")
map.dir<-paste(work.dir,"Map Layers",sep="/")
plots.dir<-paste(work.dir,"Plots",sep="/")
# Functions----
se <- function(x) sd(x) / sqrt(length(x))
se.min <- function(x) (mean(x)) - se(x)
se.max <- function(x) (mean(x)) + se(x)
sd.min <- function(x) (mean(x)) - sd(x)
sd.max <- function(x) (mean(x)) + sd(x)
scaleFUN <- function(x) sprintf("%.0f", x)
dat.length<-read_csv("length.csv")%>%
filter(!is.na(Carapace.length))%>%
filter(!Carapace.length<0)%>%
select(Sample, Tag.number, Carapace.length, Sex, Colour)%>%
glimpse()
#Check
length(unique(dat.length$Tag.number)) #9698
length(dat.length$Carapace.length) #14448
rm(list=ls()) # Clear memory
## Load Libraries ----
# To connect to GlobalArchive
library(devtools)
install_github("UWAMEGFisheries/GlobalArchive") #to check for updates
library(GlobalArchive)
library(httr)
library(jsonlite)
library(R.utils)
# To connect to GitHub
library(RCurl)
# To tidy data
library(plyr)
library(tidyverse)
library(stringr)
library(lubridate)
# For googlesheets
library(googlesheets)
## Set your working directory ----
working.dir=("C:/GitHub/Analysis_Miller_lobster")
## Save these directory names to use later----
data.dir<-paste(working.dir,"Data",sep="/")
download.dir<-paste(data.dir,"Downloads",sep="/")
tidy.dir<-paste(data.dir,"Tidy data",sep="/")
## Delete Downloads folder ----
setwd(working.dir)
unlink(download.dir, recursive=TRUE)
## Create Downloads, Staging and Tidy data folders ----
dir.create(file.path(working.dir, "Data"))
dir.create(file.path(data.dir, "Downloads"))
dir.create(file.path(data.dir, "Tidy data"))
## Query from GlobalArchive----
# Load default values from GlobalArchive ----
source("https://raw.githubusercontent.com/UWAMEGFisheries/GlobalArchive/master/values.R")
# Set as tims at the moment
# Add your personal API user token ----
API_USER_TOKEN <- "993ba5c4267b9f8cd21de73b0434c95bc72f518a4f6e725226986022"
# Set up your query ----
## Download data ----
ga.get.campaign.list(API_USER_TOKEN, process_campaign_object, q=ga.query.project("FRDC+low+catch+zone"))
# Combine all downloaded data----
## Metadata files ----
metadata <-ga.list.files("Metadata.csv")%>%
purrr::map_df(~ga.read.files_csv(.))%>%
dplyr::mutate(Latitude=as.numeric(latitude))%>%
dplyr::mutate(Longitude=as.numeric(longitude))%>%
dplyr::mutate(Trip=as.numeric(trip))%>%
dplyr::mutate(Date=paste((str_sub(date,1,4)),(str_sub(date,5,6)),(str_sub(date,7,8)),sep="-"))%>%
dplyr::mutate(Date=lubridate::as_date(ymd(Date)))%>%
dplyr::rename(Pot.remarks=comment)%>%
dplyr::select(-c(date,latitude,longitude,trip))%>%
glimpse()
## Length files ----
length <-ga.list.files("Length.csv")%>%
purrr::map_df(~ga.read.files_csv(.))%>%
dplyr::mutate(Carapace.length=as.numeric(length))%>%
dplyr::mutate(Trip=as.numeric(trip))%>%
dplyr::mutate(Damage.new.a=as.numeric(damage.new.a))%>%
dplyr::mutate(Damage.old.a=as.numeric(damage.old.a))%>%
dplyr::mutate(Damage.new.l=as.numeric(damage.new.l))%>%
dplyr::mutate(Damage.old.l=as.numeric(damage.old.l))%>%
dplyr::select(-c(length,trip,damage.new.a,damage.new.l,damage.old.a,damage.old.l))%>%
glimpse()
rm(list=ls()) # Clear memory
## Load Libraries ----
# To connect to GlobalArchive
library(devtools)
install_github("UWAMEGFisheries/GlobalArchive") #to check for updates
library(GlobalArchive)
library(httr)
library(jsonlite)
library(R.utils)
# To connect to GitHub
library(RCurl)
# To tidy data
library(plyr)
library(tidyverse)
library(stringr)
library(lubridate)
# For googlesheets
library(googlesheets)
## Set your working directory ----
#working.dir=("C:/GitHub/Analysis_Miller_lobster")
working.dir=("Z:/Analysis_Miller_lobster") # FOr Ash's laptop using Git
## Save these directory names to use later----
data.dir<-paste(working.dir,"Data",sep="/")
download.dir<-paste(data.dir,"Downloads",sep="/")
tidy.dir<-paste(data.dir,"Tidy data",sep="/")
## Delete Downloads folder ----
setwd(working.dir)
unlink(download.dir, recursive=TRUE)
## Create Downloads, Staging and Tidy data folders ----
dir.create(file.path(working.dir, "Data"))
dir.create(file.path(data.dir, "Downloads"))
dir.create(file.path(data.dir, "Tidy data"))
## Query from GlobalArchive----
# Load default values from GlobalArchive ----
source("https://raw.githubusercontent.com/UWAMEGFisheries/GlobalArchive/master/values.R")
# Set as tims at the moment
# Add your personal API user token ----
API_USER_TOKEN <- "993ba5c4267b9f8cd21de73b0434c95bc72f518a4f6e725226986022"
# Set up your query ----
## Download data ----
ga.get.campaign.list(API_USER_TOKEN, process_campaign_object, q=ga.query.project("FRDC+low+catch+zone"))
# Combine all downloaded data----
## Metadata files ----
metadata <-ga.list.files("Metadata.csv")%>%
purrr::map_df(~ga.read.files_csv(.))%>%
dplyr::mutate(Latitude=as.numeric(latitude))%>%
dplyr::mutate(Longitude=as.numeric(longitude))%>%
dplyr::mutate(Trip=as.numeric(trip))%>%
dplyr::mutate(Date=paste((str_sub(date,1,4)),(str_sub(date,5,6)),(str_sub(date,7,8)),sep="-"))%>%
dplyr::mutate(Date=lubridate::as_date(ymd(Date)))%>%
dplyr::rename(Pot.remarks=comment)%>%
dplyr::select(-c(date,latitude,longitude,trip))%>%
glimpse()
## Length files ----
length <-ga.list.files("Length.csv")%>%
purrr::map_df(~ga.read.files_csv(.))%>%
dplyr::mutate(Carapace.length=as.numeric(length))%>%
dplyr::mutate(Trip=as.numeric(trip))%>%
dplyr::mutate(Damage.new.a=as.numeric(damage.new.a))%>%
dplyr::mutate(Damage.old.a=as.numeric(damage.old.a))%>%
dplyr::mutate(Damage.new.l=as.numeric(damage.new.l))%>%
dplyr::mutate(Damage.old.l=as.numeric(damage.old.l))%>%
dplyr::select(-c(length,trip,damage.new.a,damage.new.l,damage.old.a,damage.old.l))%>%
glimpse()
rm(list=ls()) # Clears memory
# librarys----
library(tidyr)
library(dplyr)
library(stringr)
library(lubridate)
library(googlesheets)
# Study name----
study<-"Lobster.Data"
# Set work directory----
work.dir=("Z:/Analysis_Miller_lobster") # FOr Ash's laptop using Git
## Sub directories ----
data.dir<-paste(work.dir,"Data",sep="/")
map.dir<-paste(work.dir,"Map Layers",sep="/")
plots.dir<-paste(work.dir,"Plots",sep="/")
# Functions----
se <- function(x) sd(x) / sqrt(length(x))
se.min <- function(x) (mean(x)) - se(x)
se.max <- function(x) (mean(x)) + se(x)
sd.min <- function(x) (mean(x)) - sd(x)
sd.max <- function(x) (mean(x)) + sd(x)
scaleFUN <- function(x) sprintf("%.0f", x)
# Bring in and format the data----
setwd(data.dir)
dir()
dat<- read_csv("length.sw.sst.csv")%>%
#change locations to four
mutate(Location=str_replace_all(.$Location, c("Little Horseshoe"="Boundary", "Golden Ridge"="Boundary", "Irwin Reef"="Mid", "White Point"="Mid", "Cliff Head"="Low-catch", "Seven Mile"= "Control")))%>%
drop_na(Colour)%>%
drop_na(Carapace.length)%>%
filter(Carapace.length>0)%>%
filter(Colour%in%c("Red","White"))%>%
# filter(!Location=="Golden Ridge")%>% #think about putting that back in
# #   Transform variables
mutate(Date=as.factor(yday(Date)))%>%
mutate(Site=as.factor(Site))%>%
mutate(Location=as.factor(Location))%>%
mutate(Pot.number=as.factor(Pot.number))%>%
select(Location, Site, Sample, Tag.number, Carapace.length, Sex, Colour)%>%
glimpse()
#Removes doubles from Ben's SM data-----
dat<- dat[!duplicated(dat[,c("Tag.number","Sample", "Carapace.length")]),]%>%
glimpse
dat<-as.data.frame(dat)
# Plotting Themes ----
Theme1 <-
theme( # use theme_get() to see available options
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(), # switch off the rectangle around symbols in the legend
legend.text = element_text(size=12),
text=element_text(size=12),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12,angle = 270, vjust=3),
axis.title.x=element_text(vjust=0.3, size=12),
axis.title.y=element_text(vjust=0.6, angle=90, size=12),
axis.text.x=element_text(size=12,colour="black"),
axis.text.y=element_text(size=12,colour="black"),
axis.line.x=element_line(colour="black", size=0.5,linetype='solid'),
axis.ticks.x=element_line(colour="black", size=0.5,linetype='solid'),
axis.line.y=element_line(colour="black", size=0.5,linetype='solid'),
strip.background = element_blank())
mean<-tapply(dat$Carapace.length, list(dat$Colour, dat$Location), mean)
mean<-as.data.frame(mean)
glimpse(mean)
glimpse(dat)
dat_mean <- dat %>%
group_by(Location, Colour)%>%
dplyr::summarise(mean = mean(Carapace.length))%>%
glimpse()
#Hitsograms----
glimpse(dat)
dat$Location<-factor(dat$Location, levels = c("Low-Catch","Boundary", "Mid", "Control"))
glimpse(dat)
hist.stage<-ggplot(data = dat, aes(x = Carapace.length, fill = Colour)) +
geom_histogram(data = dplyr::filter(dat, Colour == "White"), aes(y = ..density..),col="grey30",binwidth=2) +
geom_histogram(data = dplyr::filter(dat, Colour == "Red"), aes(y = -..density..),col="grey30",binwidth=2) +
geom_point(data = dat_mean, aes(x = mean, y=0, shape=Colour), size=3.5, position="dodge")+
scale_y_continuous(name='Relative density',breaks = seq(-0.08,0.08,0.04),labels=abs(seq(-8,8,4))) +
# coord_flip()+
theme_bw()+
Theme1+
geom_vline(xintercept = 76)+
xlab("Carapace length (mm)")+
scale_fill_manual(values = c("red","white"))+ #,name="Lobster colouration",labels=c("Red","White"
geom_hline(aes(yintercept=0))+
facet_grid(Location~.)+
xlim(40,100)+
theme(legend.position="top")
hist.stage
hist.stage<-ggplot(data = dat, aes(x = Carapace.length, fill = Colour)) +
geom_histogram(data = dplyr::filter(dat, Colour == "White"), aes(y = ..density..),col="grey30",binwidth=2) +
geom_histogram(data = dplyr::filter(dat, Colour == "Red"), aes(y = -..density..),col="grey30",binwidth=2) +
geom_point(data = dat_mean, aes(x = mean, y=0, shape=Colour), size=3.5)+
scale_y_continuous(name='Relative density',breaks = seq(-0.08,0.08,0.04),labels=abs(seq(-8,8,4))) +
# coord_flip()+
theme_bw()+
Theme1+
geom_vline(xintercept = 76)+
xlab("Carapace length (mm)")+
scale_fill_manual(values = c("red","white"))+ #,name="Lobster colouration",labels=c("Red","White"
geom_hline(aes(yintercept=0))+
facet_grid(Location~.)+
xlim(40,100)+
theme(legend.position="top")
hist.stage
dat<- read_csv("length.sw.sst.csv")%>%
#change locations to four
mutate(Location=str_replace_all(.$Location, c("Little Horseshoe"="Boundary", "Golden Ridge"="Boundary", "Irwin Reef"="Mid", "White Point"="Mid", "Cliff Head"="Low-catch", "Seven Mile"= "Control")))%>%
drop_na(Colour)%>%
drop_na(Carapace.length)%>%
drop_na(Location)%>%
filter(Carapace.length>0)%>%
filter(Colour%in%c("Red","White"))%>%
# filter(!Location=="Golden Ridge")%>% #think about putting that back in
# #   Transform variables
mutate(Date=as.factor(yday(Date)))%>%
mutate(Site=as.factor(Site))%>%
mutate(Location=as.factor(Location))%>%
mutate(Pot.number=as.factor(Pot.number))%>%
select(Location, Site, Sample, Tag.number, Carapace.length, Sex, Colour)%>%
glimpse()
#Removes doubles from Ben's SM data-----
dat<- dat[!duplicated(dat[,c("Tag.number","Sample", "Carapace.length")]),]%>%
glimpse
dat<-as.data.frame(dat)
# Plotting Themes ----
Theme1 <-
theme( # use theme_get() to see available options
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(), # switch off the rectangle around symbols in the legend
legend.text = element_text(size=12),
text=element_text(size=12),
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 12,angle = 270, vjust=3),
axis.title.x=element_text(vjust=0.3, size=12),
axis.title.y=element_text(vjust=0.6, angle=90, size=12),
axis.text.x=element_text(size=12,colour="black"),
axis.text.y=element_text(size=12,colour="black"),
axis.line.x=element_line(colour="black", size=0.5,linetype='solid'),
axis.ticks.x=element_line(colour="black", size=0.5,linetype='solid'),
axis.line.y=element_line(colour="black", size=0.5,linetype='solid'),
strip.background = element_blank())
mean<-tapply(dat$Carapace.length, list(dat$Colour, dat$Location), mean)
mean<-as.data.frame(mean)
glimpse(mean)
glimpse(dat)
dat_mean <- dat %>%
group_by(Location, Colour)%>%
dplyr::summarise(mean = mean(Carapace.length))%>%
glimpse()
#Hitsograms----
glimpse(dat)
dat$Location<-factor(dat$Location, levels = c("Low-Catch","Boundary", "Mid", "Control"))
glimpse(dat)
hist.stage<-ggplot(data = dat, aes(x = Carapace.length, fill = Colour)) +
geom_histogram(data = dplyr::filter(dat, Colour == "White"), aes(y = ..density..),col="grey30",binwidth=2) +
geom_histogram(data = dplyr::filter(dat, Colour == "Red"), aes(y = -..density..),col="grey30",binwidth=2) +
geom_point(data = dat_mean, aes(x = mean, y=0, shape=Colour), size=3.5)+
scale_y_continuous(name='Relative density',breaks = seq(-0.08,0.08,0.04),labels=abs(seq(-8,8,4))) +
# coord_flip()+
theme_bw()+
Theme1+
geom_vline(xintercept = 76)+
xlab("Carapace length (mm)")+
scale_fill_manual(values = c("red","white"))+ #,name="Lobster colouration",labels=c("Red","White"
geom_hline(aes(yintercept=0))+
facet_grid(Location~.)+
xlim(40,100)+
theme(legend.position="top")
hist.stage
dat<- read_csv("length.sw.sst.csv")%>%
#change locations to four
mutate(Location=str_replace_all(.$Location, c("Little Horseshoe"="Boundary", "Golden Ridge"="Boundary", "Irwin Reef"="Mid", "White Point"="Mid", "Cliff Head"="Low-catch", "Seven Mile"= "Control")))%>%
drop_na(Colour)%>%
drop_na(Carapace.length)%>%
drop_na(Location)%>%
filter(Carapace.length>0)%>%
filter(Colour%in%c("Red","White"))%>%
# filter(!Location=="Golden Ridge")%>% #think about putting that back in
# #   Transform variables
mutate(Date=as.factor(yday(Date)))%>%
mutate(Site=as.factor(Site))%>%
mutate(Location=as.factor(Location))%>%
mutate(Pot.number=as.factor(Pot.number))%>%
select(Location, Site, Sample, Tag.number, Carapace.length, Sex, Colour)%>%
glimpse()
#Removes doubles from Ben's SM data-----
dat<- dat[!duplicated(dat[,c("Tag.number","Sample", "Carapace.length")]),]%>%
glimpse
